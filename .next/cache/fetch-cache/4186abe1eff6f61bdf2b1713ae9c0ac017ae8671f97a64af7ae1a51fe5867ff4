{"kind":"FETCH","data":{"headers":{"access-control-allow-headers":"X-Requested-With","access-control-allow-methods":"POST, GET, DELETE, PUT, PATCH, OPTIONS","access-control-allow-origin":"*","content-encoding":"gzip","content-length":"16144","content-type":"application/json","date":"Mon, 21 Aug 2023 10:00:44 GMT","server":"nginx/1.17.6","vary":"Accept-Encoding","x-server-cache":"false"},"body":"{"status":true,"data":{"id":"38","name":"38","description":"\r\n&lt;!-- ************************** --&gt;&lt;!-- **************************content --&gt;\r\n\r\n&lt;div className=&quot;service-description&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;navigation_list&quot;&gt;\r\n&lt;ul&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_0&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section1&quot;&gt;Overview&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_1&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section2&quot;&gt;Characteristics &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_2&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section3&quot;&gt;Relevance of Partnership Firm Registration&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_3&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section4&quot;&gt;Types &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_4&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section5&quot;&gt;procedure &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_5&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section6&quot;&gt;Documents Required&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_6&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section7&quot;&gt;Types of Partners&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_7&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section8&quot;&gt;Advantages &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Tax Compliances&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Partnerships Firm Vs. Company&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Partnership Firm Vs. Club&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Partnership Firm Vs. Hindu Undivided Family&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Partnership Firm Vs. Co-ownership&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Partnership Firm Vs. Association&lt;\/a&gt;&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd--&gt;\r\n\r\n&lt;div className=&quot;service_inner_body col-md-6 col-12&quot;&gt;\r\n&lt;div className=&quot;listbodyscroll scrolllist_1 service_body&quot; id=&quot;section1&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;margin-top:0px;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Overview&lt;\/h2&gt;\r\n\r\n&lt;p&gt;A Partnership Firm refers to an entity formed by two or more people who mutually agree to divide profits \/ loss in a predetermined ratio.&lt;\/p&gt;\r\n\r\n&lt;p&gt;In India, the primary law governing partnership registration is the Indian Partnership Registration Act of 1932.&lt;\/p&gt;\r\n\r\n&lt;p&gt;The partnership deed is a legal document used to establish the Partnership Firm Registration.&lt;\/p&gt;\r\n\r\n&lt;p&gt;According to law, a partnership is an agreement between individuals who have consented to divide profits earned from the business operation performed within the partnership firm. A partnership firm can have a maximum of 50 members.&lt;\/p&gt;\r\n\r\n&lt;p&gt;It is crucial to note that members of a Hindu Undivided Family or a Burmese Buddhist member cannot be part of a partnership firm.&lt;\/p&gt;\r\n\r\n&lt;p&gt;Read more about Partnership Firm Rule and Regulation at &lt;a className=&quot;text-color&quot; href=&quot;https:\/\/www.mca.gov.in\/Ministry\/actsbills\/pdf\/Partnership_Act_1932.pdf&quot; target=&quot;_blank&quot;&gt; The Partnership Act, 1932 &lt;\/a&gt;&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_2 service_body&quot; id=&quot;section2&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Highlights&lt;\/h2&gt;\r\n\r\n&lt;h3&gt;# Concept&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Partnership firm is a business form in which 2 or more individuals can join hands to do business.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Easy Formation&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Partnership firm can be easily &amp;amp; quickly registered in comparision to other form of business.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Low Cost Registration&lt;\/h3&gt;\r\n\r\n&lt;p&gt;As comparison to other business form, cost of registering partnership firm is very low.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Tax Benefit&lt;\/h3&gt;\r\n\r\n&lt;p&gt;More Tax Saving as compare to sole proprietor business form.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Sharing of Risk&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Individuals having same business goal can form and share risk &amp;amp; rewards.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Compliances &amp;amp; Disclosure&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Least compliance &amp;amp; disclosure required as compare to other business form.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_3 service_body&quot; id=&quot;section3&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Characteristics of Partnership Firm&lt;\/h2&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Number of Partners: &lt;\/b&gt;For partnership formation, you need at least two members and the maximum number that can join is 50.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Voluntary Registration: &lt;\/b&gt;It is not mandatory to get Partnership Firm Registration. However, you must get it to be able to avail the additional benefits that it offers.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Contractual partner: &lt;\/b&gt;Every partner is bound by a contractual obligation outlined in the original partnership deed registration format, which governs various aspects of the relationship. The deed requires each partner to sign it, thereby creating a binding agreement between all parties involved.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Competency of the Partners: &lt;\/b&gt;Minors can not become partners for partnership formation. Every partner should be competent adults.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Profit and Loss Sharing: &lt;\/b&gt;The partners must divide the profits or losses according to the percentages defined as in partnership deed.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Unlimited Liability: &lt;\/b&gt;Every partner in a partnership firm is jointly and severally liable for any losses incurred by the firm.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Interest Transfer: &lt;\/b&gt;A partner can not transfer his or her interest without getting the approval of all the other partners in partnership registration.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Principal-agent relationship: &lt;\/b&gt;The partnership involves a principal-agent relationship between the firm and its partners. As an agent, each partner is expected to act in the best interest of the company. Additionally, any partner may represent the other partners, or the entire partnership can act jointly to conduct business.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_4 service_body&quot; id=&quot;section4&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Relevance of Partnership Firm Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Partnership Firm Registration provides unique rights and advantages over unregistered partnership firms.&lt;\/p&gt;\r\n\r\n&lt;p&gt;By registering your partnership firm, you can file a lawsuit against any partner or the partnership itself to enforce your contractual rights.&lt;\/p&gt;\r\n\r\n&lt;p&gt;However, if your partnership is unregistered, you cannot file a lawsuit to enforce your rights against your fellow partners.&lt;\/p&gt;\r\n\r\n&lt;p&gt;Additionally, a registered partnership can file a lawsuit against any third party to enforce its contractual rights, but an unregistered partnership cannot do so.&lt;\/p&gt;\r\n\r\n&lt;p&gt;Furthermore, a registered partnership can use set-off or other legal actions to enforce its contractual rights, while an unregistered partnership cannot use setoff in any legal action brought against it.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_5 service_body&quot; id=&quot;section5&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Types of Partnership Firm In India&lt;\/h2&gt;\r\n\r\n&lt;h3&gt;# General Partnership:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;This is the most common type of partnership firm registration in India. In a general partnership, all partners share equal rights and responsibilities. Each partner contributes to the business&amp;#39;s capital, shares the profits and losses, and has the right to take part in the management of the firm. The liability of each partner is unlimited, which means they are personally liable for the debts and obligations of the firm.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Limited Partnership:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;In a limited partnership, there are two types of partners - general partners and limited partners. General partners have unlimited liability, and limited partners have limited liability. Limited partners are not involved in the day-to-day management of the firm and are only liable for the amount of capital they have invested in the business.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Partnership at Will:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A partnership at will is formed without a specific time limit. The partners can dissolve the firm at any time by mutual agreement. In this type of partnership, partners can join or leave the firm without affecting its continuity.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Limited Liability Partnership (LLP):&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A Limited Liability Partnership (LLP) is a type of partnership in which the liability of each partner is limited to their contribution to the business. LLPs are governed by the Limited Liability Partnership Act, 2008. LLPs have a separate legal identity from their partners, and their liabilities are limited to the assets of the firm. It is different from Partnership Firm Registration and you can know more about it at:&lt;a className=&quot;text-color&quot; href=&quot;https:\/\/www.e-startupindia.com\/llp-registration.html&quot; target=&quot;_blank&quot;&gt; LLP Registration. &lt;\/a&gt;&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_6 service_body&quot; id=&quot;section6&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;How to Register a Partnership Firm? - Procedure&lt;\/h2&gt;\r\n\r\n&lt;p&gt;The complete process takes about 7 working days, including the approval of the DIN, company name, and company incorporation. However, creating a company is now a quick process, which allows all paperwork to be loaded into a single online platform. Our experts will help you through every step of the online company registration process.&lt;\/p&gt;\r\n\r\n&lt;ul className=&quot;timeline&quot;&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;1&lt;\/div&gt;\r\n\t&lt;b style=&quot;color: #000000;&quot;&gt;Step 1&lt;\/b&gt;\r\n\r\n\t&lt;h3 style=&quot;margin-left:20px;&quot;&gt;Choose a name for your partnership firm&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;&quot;&gt;You can choose any name for your partnership firm, as long as it follows the rules set by the Registrar of Firms.&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;;&quot;&gt;Ensure that the name you choose is unique and not already taken by another firm. Also, avoid using any names related to the government or any other prohibited names.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;2&lt;\/div&gt;\r\n\t&lt;b style=&quot;color: #000000;&quot;&gt;Step 2&lt;\/b&gt;\r\n\r\n\t&lt;h3 style=&quot;margin-left:20px;&quot;&gt;Decide Partner Profit Sharing Ratio, Firm Address, and Other terms of partners&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;&quot;&gt;Partners have to decide their profit and loss sharing ratio, address of firm from where business shall be operating, investment, duties and responsibilities of each partner, terms of entering new partner or exiting old partner and other relevant terms which mutually agreed upon among all partners.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;3&lt;\/div&gt;\r\n\t&lt;b style=&quot;color: #000000;&quot;&gt;Step 3&lt;\/b&gt;\r\n\r\n\t&lt;h3 style=&quot;margin-left:20px;&quot;&gt;Draft Partnership Deed as per The Partnership Act 1932&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;&quot;&gt;You need to hire a professional expert to draft a partnership deed as per the provision of the Partnership Act, 1932. A Professional will assist you in buying appropriate value of stamp paper, deed printing, obtain signature of all partners in deed, do attestation work and apply for partnership firm registration.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;4&lt;\/div&gt;\r\n\t&lt;b style=&quot;color: #000000;&quot;&gt;Step 4&lt;\/b&gt;\r\n\r\n\t&lt;h3 style=&quot;margin-left:20px;&quot;&gt;You should submit an application to register your partnership firm&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;&quot;&gt;To register your partnership firm, you need to submit an application form along with the required fees to the Registrar of Firms in the state where your firm is located. The partnership registration application must be signed and verified by all partners or their representatives.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;5&lt;\/div&gt;\r\n\t&lt;b style=&quot;color: #000000;&quot;&gt;Step 5&lt;\/b&gt;\r\n\r\n\t&lt;h3 style=&quot;margin-left:20px;&quot;&gt;Obtain your Registration Certificate&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;&quot;&gt;Once the Registrar of Firms approves your registration application and supporting documents, your firm will be registered in the Register of Firms, and you will be given a Registration Certificate. The Register of Firms maintains the latest information of all registered firms, which can be accessed by anyone for a fee.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_6 service_body&quot; id=&quot;section6a&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Documents Required for Partnership Firm Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#1. &lt;\/b&gt;Photo, Aadhar &amp;amp; PAN of all Partners&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#2. &lt;\/b&gt;Address of Proposed Firm&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#3. &lt;\/b&gt;Form No. 1 (Application for registration under the Partnership Act).&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#4. &lt;\/b&gt;Original copy of Partnership Deed, signed by all partners.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#5. &lt;\/b&gt;Affidavit declaring the intention to become a partner.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Types of Partners&lt;\/h2&gt;\r\n\r\n&lt;h3&gt;# Active Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;An active partner is someone who has joined a partnership firm through mutual consent and actively participates in managing the business. This partner represents the other partners for all actions taken during the regular business life cycle of the company. When an active partner retires, they must publicly notify the public to release themselves from responsibility for any actions taken by the other partners after their retirement.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Dormant Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A dormant partner in partnership firm registration is a legal partner who is not actively involved in managing the business. These partners are liable to third parties and share in the partnership firm&amp;#39;s profits and losses. They are not required to make their decision to leave the partnership firm public.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Principal Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A principal partner is a notional partner who engages in a business without holding any actual equity in the business. This partner is not qualified to share in the company&amp;#39;s earnings, has no ownership stake in the business, and is not involved in its management. However, this partner is liable to other businesses for all of the firm&amp;#39;s operations.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Profit-Share Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A profit-share partner in partnership firm registration is entitled to a share of the profits but is not liable for them. Third parties can only hold such a partner responsible for the actions of the firm.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Sub-Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A sub-partner is a partner in a partnership deed registration who agrees to divide the company&amp;#39;s profits with a third party. Sub-partners have no rights against the company and are not liable for any obligations of the company.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Prospective Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A prospective partner is someone who has been accepted as a partner into an established business with the consent of all existing partners. Such a partner is not responsible for any conduct that occurred before becoming a partner in the company.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Previous Partner:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A departing partner is a partner who leaves a partnership while the other partners are still in charge of the business. Such a partner is accountable to third parties for all firm acts until they give formal notice of retirement.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Partner by Holding Out (Section 28):&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Partner by holding out, also known as partnership by estoppel, is when an individual holds themselves as a partner or permits another person to do so. When an individual represents themselves as a partner in an online registration of a partnership firm in India, they are liable to any individual who has trusted this representation and provided credit to the organization.&lt;\/p&gt;\r\n\r\n&lt;div className=&quot;card cardstyle&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;servicemorecartform&quot;&gt;\r\n&lt;h2 className=&quot;advisorsstyle&quot;&gt;Talk to Advisors&lt;\/h2&gt;\r\n\r\n&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;frmHeaderSection1&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;2&quot; \/&gt;\r\n&lt;div className=&quot;row&quot; style=&quot;margin:auto;&quot;&gt;\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px;&quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;img alt=&quot;captcha&quot; className=&quot;captcha_1&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=2&quot; style=&quot;margin-left: 2px;border-radius: 5px;width: 35%!important;float: left;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;    width: 60%!important;\r\n    float: right;margin: 0;&quot; type=&quot;tel&quot; \/&gt;\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-12 col-12&quot; style=&quot;padding-top: 13px; padding-bottom: 23px;&quot;&gt;\r\n&lt;center&gt;&lt;button className=&quot;btn-form1&quot; id=&quot;header_contactform1&quot; name=&quot;HeaderContactForm&quot; style=&quot;margin-top:1%;&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/center&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Advantages of Partnership Firm Registration&lt;\/h2&gt;\r\n\r\n&lt;h3&gt;# Minimum Compliance&lt;\/h3&gt;\r\n\r\n&lt;p&gt;One of the most significant advantages of partnership formation is that it involves minimal compliance work. Compliance can be a burden for many small businesses, particularly those that are just starting out. However, when you form a partnership, you can avoid much of this hassle. Unlike private limited companies, partnerships are not required to comply with as many legal and regulatory requirements. This means that you can focus on running your business rather than dealing with compliance work.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Simple to do Partnership Formation&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Partnership Firm is one of the simplest types of businesses to launch. In most cases, all you need is a partnership deed through partnership formation registration, which is relatively easy to obtain. This means that you can establish a partnership quickly and with minimal fuss. On the other hand, registering an LLP can take several days to complete, and you may need to go through a lengthy process of obtaining various approvals and signatures from the MCA.&lt;\/p&gt;\r\n\r\n&lt;h3&gt;# Comparatively Economical&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Another advantage of partnership formation is that it is comparatively economical. When you form a private limited company, you will need to pay several fees, including incorporation fees, compliance fees, and auditor fees. These fees can add up quickly, particularly if you&amp;#39;re just starting out. However, forming a partnership is much cheaper. In most cases, all you need to pay is the cost of partnership deed registration, which is typically much lower than the fees associated with forming a private limited company.&lt;\/p&gt;\r\n\r\n&lt;p&gt;In conclusion, forming a partnership could be an excellent option for small businesses in India. With minimal compliance work, a straightforward registration process, and comparatively low costs, partnerships can offer a range of benefits for entrepreneurs looking to start a new venture.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7b&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Tax Compliances After Obtaining Partnership Firm Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#1.&lt;\/b&gt; After partnership firm registration , partners need to obtain PANs and TANs from the Income Tax department.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#2.&lt;\/b&gt;Regardless of the firm&amp;#39;s income, it is mandatory to do &lt;b&gt;ITR Filing&lt;\/b&gt; for registered partnership firms.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#3.&lt;\/b&gt;Registered firms have to pay 30% tax plus cess &amp;amp; surcharge on their total income.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#4.&lt;\/b&gt;Partnership firms with an annual income of over \u20b9100 lakhs are required to perform a tax audit.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#5.&lt;\/b&gt;Firms with an annual income of over \u20b940 lakhs (\u20b920 lakhs for northeastern states) must get &lt;a className=&quot;text-color&quot; href=&quot;https:\/\/www.e-startupindia.com\/gst.htmll&quot; target=&quot;_blank&quot;&gt;GST Registration,&lt;\/a&gt; and those involved in e-commerce or export-import must also register.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#6.&lt;\/b&gt;After registering for GST, firms must do &lt;b&gt;GST Return Filing&lt;\/b&gt; and &lt;b&gt;TDS Return Filing&lt;\/b&gt; on a monthly or quarterly basis.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#7.&lt;\/b&gt;Partnership firms must obtain &lt;b&gt;ESIC registration&lt;\/b&gt; and file ESIC returns.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7c&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Partnerships Firm Vs. Company&lt;\/h2&gt;\r\n\r\n&lt;table className=&quot;table&quot;&gt;\r\n\t&lt;thead className=&quot;thead-light&quot;&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Criteria&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Partnership Firm&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Company&lt;\/th&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/thead&gt;\r\n\t&lt;tbody&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Legal Status&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Unincorporated&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Incorporated&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Number of Owners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Two or more&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;One or more&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Liability&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners have unlimited liability&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Shareholders have limited liability&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Management&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Managed by partners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Managed by directors appointed by shareholders&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Ownership&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Joint ownership by partners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Individual ownership of shares by shareholders&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Raising Capital&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Limited options&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Can issue shares and raise capital from public&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Legal Compliance&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Governed by Partnership Act, 1932 with less formalities&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Governed by Companies Act, 2013 with more formalities&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Taxation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners pay tax on their share of partnership income&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Company taxed as a separate legal entity, shareholders taxed on dividends&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Continuity&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partnership dissolves on the death or resignation of a partner&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Company has continuity of existence&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Transferability of Ownership&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Ownership cannot be transferred without the consent of partners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Shares can be freely bought and sold&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Reporting&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;No mandatory reporting requirements&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Must maintain books, file annual returns, and financial statements&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n\r\n&lt;h2 className=&quot;title_div&quot;&gt;Partnership Firm Vs. Club&lt;\/h2&gt;\r\n\r\n&lt;table className=&quot;table&quot;&gt;\r\n\t&lt;thead className=&quot;thead-light&quot;&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Criteria&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Partnership&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Club&lt;\/th&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/thead&gt;\r\n\t&lt;tbody&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Legal Structure&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Unincorporated&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Unincorporated&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Formation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Agreement between two or more persons&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Formed by individuals with a common interest&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Members&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Called partners, who jointly own and manage the business&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Called members, who are part of a group with a common interest&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Liability&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners have unlimited liability for the firm&amp;#39;s debts and obligations&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Members have limited liability, usually up to the amount of their contribution&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Management&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners manage the business jointly&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Club is typically run by a board of directors or an elected group of officers&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Taxation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partnerships are pass-through entities, with profits and losses flowing through to partners&amp;#39; personal tax returns&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Clubs may be taxed as nonprofit organizations, and may be exempt from federal income tax&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Ownership&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners jointly own the assets and liabilities of the business&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Clubs may be owned by a nonprofit organization or by the members collectively&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n\r\n&lt;h2 className=&quot;title_div&quot;&gt;Partnership Firm Vs. Hindu Undivided Family&lt;\/h2&gt;\r\n\r\n&lt;table className=&quot;table&quot;&gt;\r\n\t&lt;thead className=&quot;thead-light&quot;&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Criteria&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Partnership&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Hindu Undivided Family (HUF)&lt;\/th&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/thead&gt;\r\n\t&lt;tbody&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Type of Organization&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Business organization where two or more people come together to carry on a business&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Business organization where family members of a Hindu undivided family collectively own and manage the business&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Governing Law&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Governed by the Indian Partnership Act, 1932&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Governed by the Hindu Succession Act, 1956&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Formation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Created through a partnership deed which outlines the terms and conditions, including profit-sharing ratio, capital commitment, roles and responsibilities, etc.&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Created by operation of law, that is, by the birth of a male child in a Hindu undivided family&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Liability&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners have unlimited liability for debts and obligations jointly and severally&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Members&amp;#39; liability is limited to their share in the HUF property&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Number of Members&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Maximum of 20 partners in a general partnership and 50 partners in a banking business&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;No upper limit for the total number of members in the HUF&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Legal Entity&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;A partnership is a separate legal entity&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;HUF is not a separate legal entity&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Profit and Loss&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners divide gains and losses according to the proportion specified in the partnership deed&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Members split gains and losses proportionately to their ownership stakes in the HUF&amp;#39;s assets&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Dissolution&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partnership can be dissolved by mutual consent or legal operations&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;HUF can be dissolved by the members or by operation of law&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Management&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners have the right to manage the business and make decisions jointly&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;The karta or head of the family has the right to manage the business and make decisions on behalf of the family.&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n\r\n&lt;h2 className=&quot;title_div&quot;&gt;Partnership Firm Vs. Co-ownership&lt;\/h2&gt;\r\n\r\n&lt;table className=&quot;table&quot;&gt;\r\n\t&lt;thead className=&quot;thead-light&quot;&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Factors&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Partnership&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Co-ownership&lt;\/th&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/thead&gt;\r\n\t&lt;tbody&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Creation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Arises through a contract&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Can arise through a contract or operation of law&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Nature of Interest&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Arises from a common interest&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;May not necessarily arise from a common interest&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Transfers&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;A partner cannot transfer their share without the consent of all partners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;A co-owner doesn&amp;#39;t need permission to transfer their share&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Claim of Partition&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;A partner cannot claim partition of the property or shares&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;A co-owner can claim partition for their part of the property&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Profit and Loss Sharing&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;The profit and loss sharing is likely based on a contract&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Co-ownership may not arise out of profitability&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n\r\n&lt;h2 className=&quot;title_div&quot;&gt;Partnership Firm Vs. Association&lt;\/h2&gt;\r\n\r\n&lt;table className=&quot;table&quot;&gt;\r\n\t&lt;thead className=&quot;thead-light&quot;&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Factors&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Partnership&lt;\/th&gt;\r\n\t\t\t&lt;th scope=&quot;col&quot;&gt;Association&lt;\/th&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/thead&gt;\r\n\t&lt;tbody&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Ownership&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Shared ownership among 2 or more individuals&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;No ownership; represents a group of people&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Profit\/Loss&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Profits and losses are shared equally among the partners&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Members do not share profits and losses; organization run by bylaws&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Liability&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partners have personal liability for the debts of the business&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Members do not have personal liability for the debts of the organization&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Purpose&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Formed for conducting business activities&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Can be formed for social, cultural, or charitable purposes&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Taxation&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Partnership revenue reported on tax returns and taxed&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;May be tax-exempt if organized for charitable or educational purposes&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t\t&lt;tr&gt;\r\n\t\t\t&lt;td scope=&quot;row&quot;&gt;Termination&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Dissolved by agreement, death or withdrawal of a partner, bankruptcy, or court order&lt;\/td&gt;\r\n\t\t\t&lt;td&gt;Dissolved by agreement of the members, expiration of the organization&amp;#39;s charter, or court order&lt;\/td&gt;\r\n\t\t&lt;\/tr&gt;\r\n\t&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd end--&gt;&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;moredetails_form&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;form_s&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;servicemorecartform&quot;&gt;\r\n&lt;h3 style=&quot;&quot;&gt;CONTACT US&lt;\/h3&gt;\r\n\r\n&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;frmHeaderSection2&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;3&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;img alt=&quot;captcha&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=3&quot; style=&quot;float:left;max-width:90px;    margin-top: 7px;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;width:120px;float:right;&quot; type=&quot;tel&quot; \/&gt;\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;whats_noti&quot;&gt;\r\n&lt;p className=&quot;what_in&quot; style=&quot;&quot;&gt;&lt;input checked=&quot;checked&quot; data-keep-empty=&quot;true&quot; type=&quot;checkbox&quot; \/&gt; Send updates on Whatsapp&lt;\/p&gt;\r\n&lt;span className=&quot;what_noti&quot;&gt;I agree to &lt;a href=&quot;terms-and-conditions.html&quot; target=&quot;_blank&quot;&gt;terms&lt;\/a&gt; and &lt;a href=&quot;privacy-policy.html&quot; target=&quot;_blank&quot;&gt;privacy policy&lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\r\n&lt;button className=&quot;btn-form&quot; id=&quot;header_contactform2&quot; name=&quot;HeaderContactForm&quot; style=&quot;width: 100%;&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;info&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;row&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;!--package start--&gt;","image_path":null,"status":"1","slug":"partnership-firm","meta_title":"testing","heading_title":"&lt;h1&gt;Partnership Firm Registration in India. Easy &amp;amp; Simple way to start business.&lt;\/h1&gt;\r\n\r\n&lt;p&gt;Start business with 2 or more partners. Apply for Partnership Firm Registration with Expert Assistance. Our team can assist you in drafting professional partnership deed, execution, bank account opening, &amp;amp; necessary business registration. Consult Now&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fUser-Friendly Portal&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fTransparent Pricing&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fExcellent Customer Support&lt;\/p&gt;","heading_description":"","meta_keyword":"testing","meta_description":"testing","category":"20","page_id":"28","service_id":"8","style":".whats_noti {\r\n    margin: 13px 0px 1px;\r\n}\r\nli.timeline-item b {\r\n    font-weight: normal!important;\r\n    font-size: 24px!important;\r\n    margin-bottom: 10px;\r\n    text-align: left;\r\n}\r\ndiv#servicemorecartform {\r\n    margin: 0;\r\n}\r\n.description_data h3 {\r\n    font-size: 18px;\r\n    font-weight: 600!important;\r\n    text-align: left;\r\n    color: #000;\r\n    font-family: helvetica neue,Helvetica,Arial,sans-serif;\r\n    line-height: normal;\r\n    margin-bottom: 5px;\r\n    margin-left: 0;\r\n}\r\na.color {       font-weight: 600;\r\n    color: #007bff;\r\n    text-decoration: none;\r\n}\r\n.right input {\r\n    width: 100%;\r\n    padding: 10px 2%!important;\r\n    border-radius: 5px;\r\n    border: 1px solid #dee2e5;\r\n}\r\ninput[type=&quot;checkbox&quot;] {\r\n    filter: sepia(100%) brightness(80%) hue-rotate(170deg) saturate(70%) contrast(300%);\r\n}\r\nspan.what_noti a {\r\n    color: #f0a500;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n.what_in{          display: flex;\r\n    align-items: center;\r\n    margin: 0!important;\r\n    color: #f0a500!important;\r\n    font-weight: 500;}\r\n.what_in input{       width: 15px!important;\r\n    height: 16px;\r\n    margin-right: 2%;\r\n    margin-top: 0!important;}\r\n.what_noti{    font-size: 14px;\r\n    color: #777;\r\n    margin-bottom: 2%;\r\n    display: inline-block;}\r\n\r\n        .card-back.flip {\r\n    -webkit-transform: rotatey(0deg);\r\n    -moz-transform: rotatey(0deg);\r\n    -ms-transform: rotatey(0deg);\r\n    -o-transform: rotatey(0deg);\r\n    transform: rotatey(0deg);\r\n    opacity: 1;\r\n}\r\nform.tab-2 {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    display: none;\r\n    padding: 15px;\r\n}\r\n.gob {\r\n    color: #fff;\r\n    cursor: pointer;\r\n    top: 11px;\r\n    left: 11px;\r\n    position: relative;\r\n    z-index: 4;\r\n}\r\n.ui-form-01-wraper {\r\n    background: #272b37;\r\n    background-size: 100% 100%;\r\n    padding: 10px 15px;\r\n    text-align: center;\r\n    color: #fff;\r\n    box-shadow: 0px 0px 18px rgba(0, 0, 0, .5);\r\n}\r\n        a.btn.btn-form2 {\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 8px;\r\n    font-size: 13px;\r\n    position: relative;\r\n    background: linear-gradient(85deg, #fd9c19, #ffae00);\r\n    margin-left: 4%;\r\n    box-shadow: 12px 12px 24px 0 rgb(0 0 0 \/ 7%), -12px -12px 24px 0 rgba(255, 255, 255, 0.5);\r\n    width: 94%;\r\n    margin-bottom: 4%;\r\n}\r\n        .title_div1 {\r\n       font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n    line-height: normal;\r\n    margin-bottom: 6px;\r\n    margin-top: 4%;\r\n}\r\n.service-description {\r\n       overflow: hidden;\r\n    margin-top: 5%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    overflow: visible;\r\n}\r\n.card-body img {\r\n    width: 134px;\r\n}\r\na.signupbutton {\r\n    color: #000;\r\n}\r\n.card.cardicici p {\r\n    font-size: 16px;\r\n}\r\n.card-body img {\r\n    margin-bottom: 3%;\r\n}\r\n.cardstyle {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;}\r\n.timeline .timeline-item {\r\n    margin: 2rem 2rem 2rem 1rem!important;\r\n    list-style: none;\r\n}\r\n.table&gt;tbody&gt;tr&gt;td, .table&gt;tbody&gt;tr&gt;th, .table&gt;tfoot&gt;tr&gt;td, .table&gt;tfoot&gt;tr&gt;th, .table&gt;thead&gt;tr&gt;td, .table&gt;thead&gt;tr&gt;th {\r\n    padding: 8px;\r\n    line-height: 1.42857143;\r\n    vertical-align: top;font-size: 14px;\r\n    border-top: 1px solid #ddd;\r\n}\r\n.pacakage-price {\r\n    margin-top: 8%;\r\n    margin-bottom: 3%;\r\n}\r\nthead.thead-light tr th {\r\n    background: transparent;\r\n}\r\nthead.thead-light tr td {\r\n    background: transparent;\r\n}\r\n.form-control {\r\n    display: block;\r\n    width: 100%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n}\r\n.btn-form1 {\r\n    position: relative;\r\n    padding: 10px 35px;\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    color: #000;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: #fcc813;\r\n    transition: .3s;\r\n    margin-bottom: 15px;\r\n    width: 50%;\r\n}\r\n.advisorsstyle {\r\n    text-align: center;\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    color: #000;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n.timeline {\r\n    position: relative;\r\n}\r\n.timeline:before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 16px;\r\n    height: 100%;\r\n    z-index: 2;\r\n    top: 0;\r\n    bottom: 0;\r\n    border-left: 3px dashed #e3e6f0;\r\n}\r\n.timeline .timeline-item .timeline-icon {\r\n    background-color: #fcc813;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    left: 0;\r\n    width: 34px;\r\n    height: 34px;\r\n    z-index: 3;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n}\r\na#process {\r\n        color: #007bff!important;\r\n    margin-left: 0px;\r\n}\r\na#process {\r\n    display: inline;\r\n}\r\n.card.cardicici {\r\n        transition: all .3s ease;\r\n    border: 1px solid #ececec;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 0 35px 0 rgb(154 161 171\/15%);\r\n    padding: 8% 8%;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n}\r\n.subscribe-gst input {\r\n    width: 60%;\r\n    border: 1px solid #ccc;\r\n    padding: 2%;\r\n    font-size: 15px;\r\n    margin-right: 2%;\r\n}\r\n.subscribe-gst {\r\n    margin: 3% 0%;\r\n}\r\nbutton#DownloadFreeGuide {\r\n    display: inline;\r\n    height: 46px;\r\n    width: 28%;\r\n    background: #fcc813;\r\n    border: 1px solid #fcc813;\r\n    color: #222;\r\n    text-transform: uppercase;\r\n}\r\nh2.title_div {\r\n    color: #f0a500;\r\n    font-weight: 600;\r\n    font-size: 27px;\r\n    margin-bottom: 3%;\r\n}\r\n.description_data p {\r\n    text-align: left;\r\n    margin: 0 0 10px;\r\n    color: #000;\r\n    font-family: helvetica neue,Helvetica,Arial,sans-serif;\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n    margin-top: 0!important;\r\n}\r\nli.listmenuli {\r\n    font-size: 16px;\r\n    padding: 0px 19px;\r\n    display: block;\r\n    font-weight: 700;\r\n    color: #000;\r\n    text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n}\r\n.navigation_list {\r\n     width: 25%;\r\n    float: left;\r\n    position: sticky;\r\n    top: 0;\r\n}\r\nli.listmenuli a{color:#000}\r\n.anchortag{       text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n    font-size: 16px;\r\n    padding: 19px 10px;\r\n    display: block;\r\n    font-weight: 700;\r\n}\r\n.listmenuli:hover {\r\n    border-left: 5px solid #ffd000;\r\n    -webkit-box-shadow: 0 0 7px 0 #a39393;\r\n    box-shadow: 4px 13px 51px 7px rgb(10 51 80 \/ 16%);\r\n    background: #fff;\r\n}\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.multiselect-tags {\r\n    flex-wrap: nowrap;}\r\n\r\n\r\n.left p {\r\n    font-size: 19px;\r\n    color: #000;\r\n}\r\n.multiselect-wrapper {\r\n    color: #333;\r\n    font-size: 14px;\r\n    overflow: hidden;\r\n}\r\n.inner {\r\n    width: 95%;\r\n    margin: auto;\r\n}\r\n\r\ninput.submi_f {\r\n    margin-top: 5%;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.in_put button {\r\n    background: #f0a500;\r\n    width: 100%;\r\n    padding: 8px 1% 8px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    border-radius: 1px;\r\n    transition: 1s;\r\n    color: #fff;position: relative;\r\n    border: 0px;z-index: 9;\r\n}\r\n.in_put {\r\n    margin-top: 3%;\r\n}\r\n\r\n.right .form {\r\n    background: #fff;\r\n    padding: 9% 10%;\r\n    border-radius: 5px;\r\n}\r\n\r\n.right h2 {\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-size: 25px;\r\n}\r\n.text-color {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n}\r\n\r\n.form-control {\r\n    border: 1px solid #e7ebee;\r\n    padding: 10px;\r\n    width: 100%;\r\n    border-radius: 7px;\r\n    margin-top: 5px;\r\n}\r\n\r\n\r\n.box p {\r\n    font-size: 15px !important;\r\n}\r\n\r\n.box img {\r\n    width: 100%;\r\n    margin-bottom: 10%;\r\n}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n    padding-left: 1%;\r\n}\r\n.multiselect-tag {\r\n    align-items: center;\r\n    background: #f1c40c;\r\n    border-radius: var(--ms-tag-radius,4px);\r\n    color: var(--ms-tag-color,#fff);\r\n    display: flex;\r\n    font-size: 12px;\r\n    font-weight: var(--ms-tag-font-weight,600);\r\n    line-height: var(--ms-tag-line-height,1.25rem);\r\n    margin-bottom: var(--ms-tag-my,.25rem);\r\n    margin-right: var(--ms-tag-mx,.25rem);\r\n    padding: 8px 1px;\r\n    white-space: nowrap;\r\n}\r\n.multiselect-tag-remove-icon {\r\n    background-color: currentColor;\r\n    display: inline-block;\r\n    height: 12px;}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n}\r\n.multiselect-option {\r\n    font-size: 14px;\r\n}\r\n::placeholder { \/* Chrome, Firefox, Opera, Safari 10.1+ *\/\r\n    color: #333!important;\r\n    opacity: 1; \/* Firefox *\/\r\n  }\r\n  .multiselect-wrapper{    color: #333;\r\n    font-size: 14px;}\r\n.box {\r\n    width: 21%;\r\n    float: left;\r\n    margin: 4%;\r\n    text-align: center;\r\n    margin-left: 0;\r\n\r\n}\r\n.pacakage-price * small i {\r\n    font-size: 11px;\r\n    color: #000;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;cursor: pointer;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n\r\n.input-icon {\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 input {\r\n    width: 100%;\r\n    height: 35px;\r\n    padding: 10px;\r\n    font-size: 13.5px;\r\n    font-weight: 600;\r\n    color: #222;\r\n    border-radius: 2px;\r\n    border: 1px solid #4c4c4c;\r\n    background: #fff;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 button {\r\n    width: 100%;\r\n    background: #fcc813;\r\n    border: 0;\r\n    color: #272b37;\r\n    text-transform: uppercase;\r\n    padding: 10px 14px;\r\n    margin: 15px auto;\r\n    border-bottom: 2px solid #4c4c4c;\r\n    transition: all 300ms linear;\r\n    border-radius: 3px;\r\n    display: block;\r\n    margin-bottom: 10px !important;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n.clear{clear:both}\r\n.description_data p b {\r\n    font-weight: 600;\r\n    color: #000;\r\n}\r\n\r\n.cardstyle1 {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n}","tab_title":"Apply Partnership Firm Registration in India | Step-by-Step Guide","faq":"","sub_category":"33"}}","status":200,"tags":["/[hello]/page","/[service]/page"],"url":"https://sankalpitsolutions.com/ecms/api/service_info.php?slug=partnership-firm"},"revalidate":31536000}