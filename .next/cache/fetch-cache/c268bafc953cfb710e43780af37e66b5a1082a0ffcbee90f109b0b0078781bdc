{"kind":"FETCH","data":{"headers":{"access-control-allow-headers":"X-Requested-With","access-control-allow-methods":"POST, GET, DELETE, PUT, PATCH, OPTIONS","access-control-allow-origin":"*","content-encoding":"gzip","content-length":"14717","content-type":"application/json","date":"Fri, 08 Sep 2023 06:43:25 GMT","server":"nginx/1.17.6","vary":"Accept-Encoding","x-server-cache":"false"},"body":"{"status":true,"data":{"id":"34","name":"34","description":"&lt;div className=&quot;service-description&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;navigation_list flex sticky&quot;&gt;\r\n&lt;ul&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_0&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section1&quot;&gt;Overview&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_1&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section2&quot;&gt;How to Register&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_2&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section3&quot;&gt;Why Choose Pvt Ltd &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_3&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section4&quot;&gt;Eligibility&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_4&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section5&quot;&gt;Benefits&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_5&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section6&quot;&gt;Document Requirement&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_6&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section7&quot;&gt;Registration Process&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_7&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section8&quot;&gt;How We Can Help You&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_8&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section9&quot;&gt;Company Name Selection&lt;\/a&gt;&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd--&gt;\r\n\r\n&lt;div className=&quot;service_inner_body col-md-6 col-12&quot;&gt;\r\n&lt;div className=&quot;listbodyscroll scrolllist_1 service_body&quot; id=&quot;section1&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;margin-top:3%;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;What is a Private Limited Company?&lt;\/h2&gt;\r\n\r\n&lt;p style=&quot;&quot;&gt;A private limited company comes under one of the most highly recommended ways to create a business in India since it secures shareholders with limited liability and precise ownership limits.&lt;\/p&gt;\r\n\r\n&lt;p style=&quot;&quot;&gt;Private Limited Company Registration becomes the first choice for any startup since it gives the easiest way to raise funds from investors.&lt;\/p&gt;\r\n\r\n&lt;p style=&quot;&quot;&gt;Technically, the private limited company is a company that is privately owned and operated by small and medium enterprises. Business liability is limited to their shareholdings, the number of shareholders is limited to 200, and directors, and shareholders of the company can be the same person or different from each other.&lt;\/p&gt;\r\n\r\n&lt;p style=&quot;&quot;&gt;It&amp;#39;s a type of company incorporation that give firms a legal personality independent from its owners, directors and shareholders. As a result, crucial services such as the capacity to contract in its name and the protection of the owner&amp;#39;s personal assets from company obligations are provided.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_2 service_body&quot; id=&quot;section2&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;How do I Register an Online Private Limited Company Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Registering a company is easy through E-StartupIndia professionals.&lt;\/p&gt;\r\n\r\n&lt;p&gt;You need to arrange at least two or more people who are eligible to act as directors and shareholders in the company.&lt;\/p&gt;\r\n\r\n&lt;p&gt;Registering a Company is agile, easy, and can be done online with 3 simple steps:&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;Step 1:&lt;\/b&gt; Consult our advisors who will guide you through document requirements for company incorporation.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;Step 2:&lt;\/b&gt; We assist you to choose the right company name based on availability.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;Step 3:&lt;\/b&gt; We prepare and file the ROC forms (DIR, MOA, AOA, COB, etc) and register your company under the Ministry of Corporate Affairs (MCA).&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_3 service_body&quot; id=&quot;section3&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Why Choose Private Limited Company Registration?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Online company registration allows many benefits. The legitimacy of your business firm is enhanced by having a registered company. It helps your business in the following ways:&lt;\/p&gt;\r\n\r\n&lt;p&gt;1. Company listing under MCA records&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. Provides protection from personal liability as well as security against other losses &amp;amp; risks&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. Low tax rates as compared to sole proprietorship firm&lt;\/p&gt;\r\n\r\n&lt;p&gt;4. Directors and Shareholders can be separated&lt;\/p&gt;\r\n\r\n&lt;p&gt;5. Attracts more customers&lt;\/p&gt;\r\n\r\n&lt;p&gt;6. Easily obtains bank loans and good investments from trustworthy investors&lt;\/p&gt;\r\n\r\n&lt;p&gt;7. Provides liability insurance to safeguard your company&amp;#39;s assets.&lt;\/p&gt;\r\n\r\n&lt;p&gt;8. Greater capital contribution diversity and stability&lt;\/p&gt;\r\n\r\n&lt;p&gt;9. Enhances the ability to become large and expand&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_4 service_body&quot; id=&quot;section4&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Eligibility for Online Company Registration&lt;\/h2&gt;\r\n\r\n&lt;p style=&quot;margin-top:-25px;&quot;&gt;We must ensure that the qualifying requirements are met, as outlined by the Companies Act of 2013 before proceeding with private limited company registration.&lt;\/p&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Minimum Two Directors&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A private limited company must have at least two directors, with a maximum of fifteen. A minimum of one of the company&amp;#39;s directors must be a resident of India.&lt;\/p&gt;\r\n\r\n&lt;p&gt;If you don&amp;#39;t have 2 directors then no worry, you can apply for &lt;a className=&quot;text-color&quot; href=&quot;https:\/\/www.e-startupindia.com\/one-person-company.html&quot; target=&quot;_blank&quot;&gt;one person company registration. &lt;svg xmlns=&quot;http:\/\/www.w3.org\/2000\/svg&quot; height=&quot;1em&quot; viewBox=&quot;0 0 512 512&quot;&gt;&lt;path d=&quot;M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32h82.7L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3V192c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32H320zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z&quot;\/&gt;&lt;\/svg&gt;&lt;\/a&gt;&lt;\/p&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Unique Company Name&lt;\/h3&gt;\r\n\r\n&lt;p&gt;Your company&amp;#39;s name must be distinct and unique. The suggested company name should not be similar to any existing registered Indian companies or trademarks&lt;\/p&gt;\r\n\r\n&lt;div className=&quot;cardstyle1&quot;&gt;\r\n&lt;div className=&quot;row&quot;&gt;\r\n&lt;div className=&quot;col-md-7&quot;&gt;\r\n&lt;p style=&quot;margin-top: 2%!important;&quot;&gt;Guide how to opt right company name&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-5&quot;&gt;&lt;a className=&quot;btn btn-form2&quot; href=&quot;https:\/\/goo.gl\/C3oHtX&quot; target=&quot;_blank&quot;&gt;Download&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Minimum Capital Contribution:&lt;\/h3&gt;\r\n\r\n&lt;p&gt;A business does not require any minimum capital. Even you can incorporate a company by Rs.1\/- paid up capital. However, a company must be registered with minimum authorized capital of Rs. &lt;b&gt;1 Lakh.&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Registered Office&lt;\/h3&gt;\r\n\r\n&lt;p&gt;The Proposed Company must have an address at any location within the State where you want to do private limited company registration.&lt;\/p&gt;\r\n\r\n&lt;p&gt;The registered office of a company does not have to be a commercial location. Even a rented house might serve as the registered office if the landlord provides a letter of authorization.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_5 service_body&quot; id=&quot;section5&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Benefits of Private Limited Company Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;1. There are several reasons to register your business as a private limited company:&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. Banks, venture capitalists, and investors prefer it.&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. Shares are easy to assign and redistribute to other directors\/people who have put money into the company.&lt;\/p&gt;\r\n\r\n&lt;p&gt;4. Combines the flexibility of a partnership with the benefits of a public limited company.&lt;\/p&gt;\r\n\r\n&lt;p&gt;5. The company has the least risk of getting dissolved.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_6 service_body&quot; id=&quot;section6&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Documents required for Private Limited Company Registration&lt;\/h2&gt;\r\n\r\n&lt;p style=&quot;margin-top:-35px;&quot;&gt;For company registrations, documents requirements are simple and handy. You must have the following documents under &lt;a className=&quot;color&quot; href=&quot;https:\/\/www.mca.gov.in\/MinistryV2\/incorporation_company.html&quot; target=&quot;_blank&quot;&gt;MCA &lt;img alt=&quot;link icon&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/e-startupindia.com\/theme\/default\/images\/link icon.png&quot; style=&quot;    height: 17px;\r\n    width: 17px;\r\n    margin-top: -7px;&quot; \/&gt;&lt;\/a&gt;:&lt;\/p&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Documents of the Company&amp;#39;s Director&lt;\/h3&gt;\r\n\r\n&lt;p&gt;1. Photo&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. PAN&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. Aadhar&lt;\/p&gt;\r\n\r\n&lt;p&gt;4. Address Proof*&lt;\/p&gt;\r\n\r\n&lt;p&gt;5. Proof of Identity**&lt;\/p&gt;\r\n\r\n&lt;h3 className=&quot;title_div1&quot;&gt;# Proof of the Company&amp;#39;s Registered Office Address&lt;\/h3&gt;\r\n\r\n&lt;p&gt;1. Latest electricity OR any other utility bill in the name of the owner&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. Rent agreement b\/w owner &amp;amp; company promoter&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\nOR&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. NOC from Owner (if owner is the company&amp;#39;s promoter)&lt;\/p&gt;\r\n\r\n&lt;p&gt;*For Address Proof: Bank Statement, Electricity Bill, Telephone Bill, Mobile Bill. (Anyone, not older than 2 months).&lt;\/p&gt;\r\n\r\n&lt;p&gt;**For Proof of Identity: Driving License, Voter ID card, Passport (Anyone).&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_6 service_body&quot; id=&quot;section6a&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Step-by-Step Timeline for Online Company Registration Process&lt;\/h2&gt;\r\n\r\n&lt;p&gt;The complete process takes about 7 working days, including the approval of the DIN, company name, and company incorporation. However, creating a company is now a quick process, which allows all paperwork to be loaded into a single online platform. Our experts will help you through every step of the online company registration process.&lt;\/p&gt;\r\n\r\n&lt;ul className=&quot;timeline&quot;&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;1&lt;\/div&gt;\r\n\r\n\t&lt;h3 style=&quot;color: #000000;&quot;&gt;Day 1&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;1. Review of the papers and information submitted&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;2. Request for a Digital Signature Certificate&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon &quot;&gt;2&lt;\/div&gt;\r\n\r\n\t&lt;h3 style=&quot; color: #000000; &quot;&gt;Day 2 - 3&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;1. Checking availability for company name&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;2. Draft Business Objectives&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;3. Preparing draft for documents like MoA, AoA, DIR &amp;amp; others&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;4. Share with you for approval.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon &quot;&gt;3&lt;\/div&gt;\r\n\r\n\t&lt;h3 style=&quot; color: #000000; &quot;&gt;Day 4 - 5&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;1. File SPICe form for Company Name reservation&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;2. File for Company registration forms&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;3. Apply for Director DIN&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;4. Apply for PAN &amp;amp; TAN of company&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item &quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon &quot;&gt;4&lt;\/div&gt;\r\n\r\n\t&lt;h3 style=&quot; color: #000000; &quot;&gt;Day 6 - 10&lt;\/h3&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;1. Wait for application processing at Government [MCA] level&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;2. Deliver you Certificate of Incorporation and other documents&lt;\/p&gt;\r\n\r\n\t&lt;p style=&quot;margin-left:20px;margin-top:-20px;&quot;&gt;3. Help you in opening Current bank account&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n\r\n&lt;div className=&quot;row row1&quot;&gt;\r\n&lt;div className=&quot;col-md-5 opcnew&quot;&gt;\r\n&lt;div className=&quot;card cardicici&quot;&gt;\r\n&lt;div className=&quot;card-body&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/template\/images\/icici_bank_media_logo.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;p style=&quot;&quot;&gt;After OPC Registration, No need to rush at bank branch offices to open a company current bank account. We will help you to open an account in ICICI Bank while you sit at your place.&lt;\/p&gt;\r\n\r\n&lt;div&gt;&lt;a className=&quot;signupbutton&quot; href=&quot;https:\/\/cadigital.icicibank.com\/SmartFormWeb\/apps\/services\/www\/SmartFormWeb\/desktopbrowser\/default\/index.html?source=BCApplication-InstaBill#\/&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Apply Now&lt;\/b&gt;&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-5 opcnew1&quot;&gt;\r\n&lt;div className=&quot;card cardicici&quot;&gt;\r\n&lt;div className=&quot;card-body&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/template\/img\/instabill_banking.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;p&gt;With the help of Instabill Mobile App, connect your ICICI Bank current account and do seamless bank accounting, download bank statements and check bank balance in one click.&lt;\/p&gt;\r\n\r\n&lt;div&gt;&lt;a className=&quot;signupbutton&quot; href=&quot;https:\/\/play.google.com\/store\/apps\/details?id=app.instabillpro&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;SignUp Now&lt;\/b&gt;&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;GST Registration after Company Registration&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Individuals, companies, and firms can avail of the benefits of input tax credit &amp;amp; other benefits of GST by undergoing the &lt;a className=&quot;color&quot; href=&quot;https:\/\/www.e-startupindia.com\/gst.html&quot;&gt;GST Registration &lt;img alt=&quot;link icon&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/e-startupindia.com\/theme\/default\/images\/link icon.png&quot; style=&quot;height:20px; width:20px&quot; \/&gt;&lt;\/a&gt; process through the GST Registration application.&lt;\/p&gt;\r\n\r\n&lt;p&gt;You can apply for GST registration while incorporating a company on the MCA portal.&lt;\/p&gt;\r\n\r\n&lt;p&gt;To do so, simply give consent for the GST registration application in e-form AGILE (INC-35) on the MCA portal.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Advantages of Private Limited Company&lt;\/h2&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#1. &lt;\/b&gt;You get better brand recognition and credibility. As a result, customer trust and loyalty is boosted.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#2. &lt;\/b&gt;You will be able to get various tax benefits including deductions and exemptions provided to private limited companies.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#3. &lt;\/b&gt;Private Limited Company is a separate entity so it can enter into contracts, sue and be sued in its own name.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#4. &lt;\/b&gt;Registering a company allows you to have access to various sources of funding. For example, bank loans, venture capital, and angel investors.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;#5. &lt;\/b&gt;An easy exit strategy for shareholders as shares of a Private Limited Company can be easily transferred.&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\nShareholders of a Private Limited Company are only liable for the amount of money they have invested in the company. Thus, their personal assets are protected in case of a financial loss.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7b&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;How can we help in Private Limited Company Registration?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;We have a leading team of professionals who are capable of delivering a quick Online Company Registration Service in India without any hassles and error free.&lt;\/p&gt;\r\n\r\n&lt;p&gt;Since 2014, Our professionals are doing frequent online company registration on a daily basis and keep them up to date with MCA&amp;#39;s new changes in registration procedure. Hence, able to provide you with the best of the MCA functionality.&lt;\/p&gt;\r\n\r\n&lt;p&gt;We will provide you all required documents at the end of delivery of the Private Limited Company Registration services which includes:&lt;\/p&gt;\r\n\r\n&lt;p&gt;1. Directors DIN and DSC in Pendrive&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. Company&amp;#39;s MoA &amp;amp; AoA&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. Challan for Registration fees and stamp duty paid at Govt. Office&lt;\/p&gt;\r\n\r\n&lt;p&gt;4. Certificate of Incorporation&lt;\/p&gt;\r\n\r\n&lt;p&gt;5. Company&amp;#39;s PAN and TAN&lt;\/p&gt;\r\n\r\n&lt;p&gt;It&amp;#39;s not yet over! After this, We will help you to open a current bank account with ICICI Bank and get you free from bank representatives demanding repetitive documents.&lt;\/p&gt;\r\n\r\n&lt;p&gt;And Set you free to launch your dream business.&lt;\/p&gt;\r\n\r\n&lt;div className=&quot;card cardstyle&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;servicemorecartform&quot;&gt;\r\n&lt;h2 className=&quot;advisorsstyle&quot;&gt;Talk to Advisors&lt;\/h2&gt;\r\n\r\n&lt;form action=&quot;&quot; id=&quot;form2&quot; method=&quot;post&quot; name=&quot;frmHeaderSection1&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;2&quot; \/&gt;\r\n&lt;div className=&quot;row&quot; style=&quot;margin:auto;&quot;&gt;\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;name2&quot; maxlength=&quot;50&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px;&quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;email2&quot; maxlength=&quot;50&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;mobile2&quot; maxlength=&quot;50&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;img alt=&quot;captcha&quot; className=&quot;captcha_1&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=2&quot; style=&quot;margin-left: 2px;border-radius: 5px;width: 35%!important;float: left;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;    width: 60%!important;\r\n    float: right;margin: 0;&quot; type=&quot;tel&quot; \/&gt;\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-12 col-12&quot; style=&quot;padding-top: 13px; padding-bottom: 23px;&quot;&gt;\r\n&lt;center&gt;&lt;button className=&quot;btn-form1&quot; id=&quot;header_contactform1&quot; name=&quot;HeaderContactForm&quot; style=&quot;margin-top:1%;&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/center&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7c&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data mt-3&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Factors To Consider During The Selection Of The Company Name&lt;\/h2&gt;\r\n\r\n&lt;p&gt;The name of your company is of the utmost significance. It makes the first impact on the minds of your buyers, suppliers, and stakeholders. So make sure that you adhere to the Private limited company registration name availability criteria.&lt;\/p&gt;\r\n\r\n&lt;p&gt;TIPS for unique Company Name Approval:-&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# The name should be Short yet simple.&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;The name should be short and to the point. Make sure that &amp;quot;people can pronounce it easily&amp;quot; when choosing a name. The first time someone hears the company&amp;#39;s name, it must register in their brains.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# The name should be Meaningful.&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;The name of your company should be associated with your business itself. It should fit with the company&amp;#39;s branding.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;The name should be Unique.&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;The name of your company should not be the same as an existing company or trademark. You can consult our professionals to check if your company name is identical or similar two others. They will further guide you in registering your unique brand name or business logo under &lt;a className=&quot;text-color color&quot; href=&quot;https:\/\/www.e-startupindia.com\/trademark.html&quot; target=&quot;_blank&quot;&gt;Trademark Registration &lt;img alt=&quot;link icon&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/e-startupindia.com\/theme\/default\/images\/link icon.png&quot; style=&quot;height:20px; width:20px&quot; \/&gt;&lt;\/a&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Suffix&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;The name of your company should end with the suffix Private Ltd in a case of a Private limited company and LLP is a matter of a limited liability partnership.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# The name Should not be illegal\/offensive.&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;The name of your company should not be against the law. This indicates that it cannot be abusive or against the customs and beliefs of any religion. When you are working for company registration, you need to make sure that you know all the details about the Private limited company registration.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd end--&gt;&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;moredetails_form&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;form_s&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;form3&quot;&gt;\r\n&lt;h3 style=&quot;&quot;&gt;CONTACT US&lt;\/h3&gt;\r\n\r\n&lt;form action=&quot;&quot; id=&quot;form3&quot; method=&quot;post&quot; name=&quot;frmHeaderSection2&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;3&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;name3&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;email3&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; id=&quot;mobile3&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;img alt=&quot;captcha&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=3&quot; style=&quot;float:left;max-width:90px;    margin-top: 7px;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;width:120px;float:right;&quot; type=&quot;tel&quot; \/&gt;\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;whats_noti&quot;&gt;\r\n&lt;p className=&quot;what_in&quot; style=&quot;&quot;&gt;&lt;input checked=&quot;checked&quot; data-keep-empty=&quot;true&quot; type=&quot;checkbox&quot; \/&gt; Send updates on Whatsapp&lt;\/p&gt;\r\n&lt;span className=&quot;what_noti&quot;&gt;I agree to &lt;a href=&quot;terms-and-conditions.html&quot; target=&quot;_blank&quot;&gt;terms&lt;\/a&gt; and &lt;a href=&quot;privacy-policy.html&quot; target=&quot;_blank&quot;&gt;privacy policy&lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\r\n&lt;button className=&quot;btn-form&quot; id=&quot;header_contactform2&quot; name=&quot;HeaderContactForm&quot; style=&quot;width: 100%;&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;info&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;row&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;!--package start--&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;","image_path":null,"status":"1","slug":"private-limited-company","meta_title":"Online Private Limited Company Registration | Pvt Ltd Registration","heading_title":"&lt;h1&gt;Online Private Limited Company Registration in India, No matter where you are located&lt;\/h1&gt;\r\n\r\n&lt;p&gt;Give shape to your business idea. Our professionals can help you in online Private Limited company registration. Just provide the documents. We will deliver all legal papers including the company&amp;#39;s current bank account.&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fUser-Friendly Portal&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fTransparent Pricing&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fExcellent Customer Support&lt;\/p&gt;\r\n&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;","heading_description":"&lt;p&gt;&amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\n&amp;lt;h1&amp;gt;Online Private Limited Company Registration in India, No matter where you are located&amp;lt;\/h1&amp;gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;&amp;lt;p&amp;gt;Give shape to your business idea. Our professionals can help you in online Private Limited company registration. Just provide the documents. We will deliver all legal papers including the company&amp;amp;#39;s current bank account.&amp;lt;\/p&amp;gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;&amp;lt;p&amp;gt;\u2714 \ufe0fUser-Friendly Portal&amp;lt;\/p&amp;gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;&amp;lt;p&amp;gt;\u2714 \ufe0fTransparent Pricing&amp;lt;\/p&amp;gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;&amp;lt;p&amp;gt;\u2714 \ufe0fExcellent Customer Support&amp;lt;\/p&amp;gt;&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\n&amp;lt;\/div&amp;gt;&lt;\/p&gt;\r\n&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;","meta_keyword":"Private Limited Company","meta_description":"Apply Online Private Limited Company Registration. E-Startup India can help you to obtain Company Registration quickly and hassle free assisted by CA\/CS.","category":"20","page_id":"32","service_id":"4","style":".spinner_1 {\r\n  margin: 30px auto 0;\r\n  width: 70px;\r\n  text-align: center;\r\n}\r\n.container_a {\r\n    display: flex;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    flex-flow: row wrap;\r\n}\r\n.navigation_list {\r\n    max-height: 715px;\r\n    position: sticky!important;\r\n    top: 10px;\r\n}\r\n.title_div1 {\r\n    margin-left: 0;\r\n}\r\n\r\n.spinner_1  span {\r\nwidth: 10px;\r\n    height: 10px;\r\n    background-color: #fcc813;\r\n    border-radius: 100%;\r\n    display: inline-block;\r\n    -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\r\n    animation: sk-bouncedelay 1.4s infinite ease-in-out both;\r\n}\r\n\r\n.spinner_1 .bounce1 {\r\n  -webkit-animation-delay: -0.32s;\r\n  animation-delay: -0.32s;\r\n}\r\n\r\n.spinner_1 .bounce2 {\r\n  -webkit-animation-delay: -0.16s;\r\n  animation-delay: -0.16s;\r\n}\r\n\r\n@-webkit-keyframes sk-bouncedelay {\r\n  0%, 80%, 100% { -webkit-transform: scale(0) }\r\n  40% { -webkit-transform: scale(1.0) }\r\n}\r\n\r\n@keyframes  sk-bouncedelay {\r\n  0%, 80%, 100% { \r\n    -webkit-transform: scale(0);\r\n    transform: scale(0);\r\n  } 40% { \r\n    -webkit-transform: scale(1.0);\r\n    transform: scale(1.0);\r\n  }\r\n}\r\n.whats_noti {\r\n    margin: 13px 0px 1px;\r\n}\r\n\r\n\r\n.form_s {\r\n    border: 1px solid #ececec;\r\n    background-color: #fff;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 0 35px 0 rgb(154 161 171\/15%);\r\n    padding: 7%;\r\n    margin-top: 10%;\r\n}\r\n\r\ndiv#servicemorecartform {\r\n    margin: 0;\r\n}\r\na.color {       font-weight: 600;\r\n    color: #007bff;\r\n    text-decoration: none;\r\n}\r\n.right input {\r\n    width: 100%;\r\n    padding: 10px 2%!important;\r\n    border-radius: 5px;\r\n    border: 1px solid #dee2e5;\r\n}\r\ninput[type=&quot;checkbox&quot;] {\r\n    filter: sepia(100%) brightness(80%) hue-rotate(170deg) saturate(70%) contrast(300%);\r\n}\r\nspan.what_noti a {\r\n    color: #f0a500;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n.what_in{          display: flex;\r\n    align-items: center;\r\n    margin: 0!important;    font-size: 14px;\r\n    color: #f0a500!important;\r\n    font-weight: 500;}\r\n.what_in input{       width: 15px!important;\r\n    height: 16px;\r\n    margin-right: 2%;\r\n    margin-top: 0!important;}\r\n.what_noti{    font-size: 14px;\r\n    color: #777;\r\n    margin-bottom: 2%;\r\n    display: inline-block;}\r\n\r\n        .card-back.flip {\r\n    -webkit-transform: rotatey(0deg);\r\n    -moz-transform: rotatey(0deg);\r\n    -ms-transform: rotatey(0deg);\r\n    -o-transform: rotatey(0deg);\r\n    transform: rotatey(0deg);\r\n    opacity: 1;\r\n}\r\nform.tab-2 {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    display: none;\r\n    padding: 15px;\r\n}\r\n.gob {\r\n    color: #fff;\r\n    cursor: pointer;\r\n    top: 11px;\r\n    left: 11px;\r\n    position: relative;\r\n    z-index: 4;\r\n}\r\n.ui-form-01-wraper {\r\n    background: #272b37;\r\n    background-size: 100% 100%;\r\n    padding: 10px 15px;\r\n    text-align: center;\r\n    color: #fff;\r\n    box-shadow: 0px 0px 18px rgba(0, 0, 0, .5);\r\n}\r\n        a.btn.btn-form2 {\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 8px;\r\n    font-size: 13px;\r\n    position: relative;\r\n    background: linear-gradient(85deg, #fd9c19, #ffae00);\r\n    margin-left: 4%;\r\n    box-shadow: 12px 12px 24px 0 rgb(0 0 0 \/ 7%), -12px -12px 24px 0 rgba(255, 255, 255, 0.5);\r\n    width: 94%;\r\n    margin-bottom: 4%;\r\n}\r\n        .title_div1 {\r\n       font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n    line-height: normal;\r\n    margin-bottom: 6px;\r\n    margin-top: 4%;\r\n}\r\n.service-description {\r\n       overflow: hidden;\r\n    margin-top: 5%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    overflow: visible;\r\n}\r\n.card-body img {\r\n    width: 134px;\r\n}\r\na.signupbutton {\r\n    color: #000;\r\n}\r\n.card.cardicici p {\r\n    font-size: 16px;\r\n}\r\n.card-body img {\r\n    margin-bottom: 3%;\r\n}\r\n.cardstyle {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;}\r\n.timeline .timeline-item {\r\n    margin: 2rem 2rem 2rem 1rem!important;\r\n    list-style: none;\r\n}\r\n.table&gt;tbody&gt;tr&gt;td, .table&gt;tbody&gt;tr&gt;th, .table&gt;tfoot&gt;tr&gt;td, .table&gt;tfoot&gt;tr&gt;th, .table&gt;thead&gt;tr&gt;td, .table&gt;thead&gt;tr&gt;th {\r\n    padding: 8px;\r\n    line-height: 1.42857143;\r\n    vertical-align: top;font-size: 14px;\r\n    border-top: 1px solid #ddd;\r\n}\r\n.pacakage-price {\r\n    margin-top: 8%;\r\n    margin-bottom: 3%;\r\n}\r\nthead.thead-light tr th {\r\n    background: transparent;\r\n}\r\nthead.thead-light tr td {\r\n    background: transparent;\r\n}\r\n.form-control {\r\n    display: block;\r\n    width: 100%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n}\r\n.btn-form1 {\r\n    position: relative;\r\n    padding: 10px 35px;\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    color: #000;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: #fcc813;\r\n    transition: .3s;\r\n    margin-bottom: 15px;\r\n    width: 50%;\r\n}\r\n.advisorsstyle {\r\n    text-align: center;\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    color: #000;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n.timeline {\r\n    position: relative;\r\n}\r\n.timeline:before {\r\n    content: &#039;&#039;;\r\n    position: absolute;\r\n    left: 16px;\r\n    height: 100%;\r\n    z-index: 2;\r\n    top: 0;\r\n    bottom: 0;\r\n    border-left: 3px dashed #e3e6f0;\r\n}\r\n.timeline .timeline-item .timeline-icon {\r\n    background-color: #fcc813;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    left: 0;\r\n    width: 34px;\r\n    height: 34px;\r\n    z-index: 3;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n}\r\na#process {\r\n        color: #007bff!important;\r\n    margin-left: 0px;\r\n}\r\na#process {\r\n    display: inline;\r\n}\r\n.card.cardicici {\r\n        transition: all .3s ease;\r\n    border: 1px solid #ececec;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 0 35px 0 rgb(154 161 171\/15%);\r\n    padding: 8% 8%;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n}\r\n.subscribe-gst input {\r\n    width: 60%;\r\n    border: 1px solid #ccc;\r\n    padding: 2%;\r\n    font-size: 15px;\r\n    margin-right: 2%;\r\n}\r\n.subscribe-gst {\r\n    margin: 3% 0%;\r\n}\r\nbutton#DownloadFreeGuide {\r\n    display: inline;\r\n    height: 46px;\r\n    width: 28%;\r\n    background: #fcc813;\r\n    border: 1px solid #fcc813;\r\n    color: #222;\r\n    text-transform: uppercase;\r\n}\r\nh2.title_div {\r\n    color: #f0a500;\r\n    font-weight: 600;\r\n    font-size: 27px;\r\n    margin-bottom: 3%;\r\n}\r\n.description_data p {\r\n    text-align: left;\r\n    margin: 0 0 10px;\r\n    color: #000;\r\n    font-family: helvetica neue,Helvetica,Arial,sans-serif;\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n    margin-top: 0!important;\r\n}\r\nli.listmenuli {\r\n    font-size: 16px;\r\n    padding: 0px 19px;\r\n    display: block;\r\n    font-weight: 700;\r\n    color: #000;\r\n    text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n}\r\n.navigation_list {\r\n     width: 25%;\r\n    float: left;\r\n    position: sticky;\r\n    top: 0;\r\n}\r\nli.listmenuli a{color:#000}\r\n.anchortag{       text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n    font-size: 16px;\r\n    padding: 19px 10px;\r\n    display: block;\r\n    font-weight: 700;\r\n}\r\n.listmenuli:hover {\r\n    border-left: 5px solid #ffd000;\r\n    -webkit-box-shadow: 0 0 7px 0 #a39393;\r\n    box-shadow: 4px 13px 51px 7px rgb(10 51 80 \/ 16%);\r\n    background: #fff;\r\n}\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.multiselect-tags {\r\n    flex-wrap: nowrap;}\r\n\r\n\r\n.left p {\r\n    font-size: 19px;\r\n    color: #000;\r\n}\r\n.multiselect-wrapper {\r\n    color: #333;\r\n    font-size: 14px;\r\n    overflow: hidden;\r\n}\r\n.inner {\r\n    width: 95%;\r\n    margin: auto;\r\n}\r\n\r\ninput.submi_f {\r\n    margin-top: 5%;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.in_put button {\r\n    background: #f0a500;\r\n    width: 100%;\r\n    padding: 8px 1% 8px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    border-radius: 1px;\r\n    transition: 1s;\r\n    color: #fff;position: relative;\r\n    border: 0px;z-index: 9;\r\n}\r\n.in_put {\r\n    margin-top: 3%;\r\n}\r\n\r\n.right .form {\r\n    background: #fff;\r\n    padding: 9% 10%;\r\n    border-radius: 5px;\r\n}\r\n\r\n.right h2 {\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-size: 25px;\r\n}\r\n.text-color {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n}\r\n\r\n.form-control {\r\n    border: 1px solid #e7ebee;\r\n    padding: 10px;\r\n    width: 100%;\r\n    border-radius: 7px;\r\n    margin-top: 5px;\r\n}\r\n\r\n\r\n.box p {\r\n    font-size: 15px !important;\r\n}\r\n\r\n.box img {\r\n    width: 100%;\r\n    margin-bottom: 10%;\r\n}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n    padding-left: 1%;\r\n}\r\n.multiselect-tag {\r\n    align-items: center;\r\n    background: #f1c40c;\r\n    border-radius: var(--ms-tag-radius,4px);\r\n    color: var(--ms-tag-color,#fff);\r\n    display: flex;\r\n    font-size: 12px;\r\n    font-weight: var(--ms-tag-font-weight,600);\r\n    line-height: var(--ms-tag-line-height,1.25rem);\r\n    margin-bottom: var(--ms-tag-my,.25rem);\r\n    margin-right: var(--ms-tag-mx,.25rem);\r\n    padding: 8px 1px;\r\n    white-space: nowrap;\r\n}\r\n.multiselect-tag-remove-icon {\r\n    background-color: currentColor;\r\n    display: inline-block;\r\n    height: 12px;}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n}\r\n.multiselect-option {\r\n    font-size: 14px;\r\n}\r\n::placeholder { \/* Chrome, Firefox, Opera, Safari 10.1+ *\/\r\n    color: #333!important;\r\n    opacity: 1; \/* Firefox *\/\r\n  }\r\n  .multiselect-wrapper{    color: #333;\r\n    font-size: 14px;}\r\n.box {\r\n    width: 21%;\r\n    float: left;\r\n    margin: 4%;\r\n    text-align: center;\r\n    margin-left: 0;\r\n\r\n}\r\n.pacakage-price * small i {\r\n    font-size: 11px;\r\n    color: #000;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;cursor: pointer;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n\r\n.input-icon {\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 input {\r\n    width: 100%;\r\n    height: 35px;\r\n    padding: 10px;\r\n    font-size: 13.5px;\r\n    font-weight: 600;\r\n    color: #222;\r\n    border-radius: 2px;\r\n    border: 1px solid #4c4c4c;\r\n    background: #fff;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 button {\r\n    width: 100%;\r\n    background: #fcc813;\r\n    border: 0;\r\n    color: #272b37;\r\n    text-transform: uppercase;\r\n    padding: 10px 14px;\r\n    margin: 15px auto;\r\n    border-bottom: 2px solid #4c4c4c;\r\n    transition: all 300ms linear;\r\n    border-radius: 3px;\r\n    display: block;\r\n    margin-bottom: 10px !important;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n.clear{clear:both}\r\n.description_data p b {\r\n    font-weight: 600;\r\n    color: #000;\r\n}\r\n\r\n.cardstyle1 {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n}","tab_title":"Online Private Limited Company Registration | Pvt Ltd Registration","faq":"&lt;p&gt;&amp;nbsp;&lt;\/p&gt;\r\n&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;&lt;quillbot-extension-portal data-keep-empty=&quot;true&quot;&gt;&lt;\/quillbot-extension-portal&gt;","sub_category":"33"}}","status":200,"tags":["/[service]/page"],"url":"https://sankalpitsolutions.com/ecms/api/service_info.php?slug=private-limited-company"},"revalidate":31536000}