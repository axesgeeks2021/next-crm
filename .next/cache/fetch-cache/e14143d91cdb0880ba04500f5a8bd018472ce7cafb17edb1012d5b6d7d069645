{"kind":"FETCH","data":{"headers":{"access-control-allow-headers":"X-Requested-With","access-control-allow-methods":"POST, GET, DELETE, PUT, PATCH, OPTIONS","access-control-allow-origin":"*","content-encoding":"gzip","content-length":"12734","content-type":"application/json","date":"Wed, 23 Aug 2023 05:35:13 GMT","server":"nginx/1.17.6","vary":"Accept-Encoding","x-server-cache":"false"},"body":"{"status":true,"data":{"id":"33","name":"33","description":"\r\n&lt;!-- ************************** --&gt;&lt;!-- **************************content --&gt;\r\n\r\n&lt;div className=&quot;service-description&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;navigation_list&quot;&gt;\r\n&lt;ul&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_0&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section1&quot;&gt;What is Trademark?&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_1&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section2&quot;&gt;How to Apply Trademark?&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_2&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section3&quot;&gt;Key Points of Trademark Registration&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_3&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section4&quot;&gt;Why should I Register Trademark?&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_4&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section5&quot;&gt;Types of Trademarks &lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_5&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section6&quot;&gt;Trademark Class&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_6&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section7&quot;&gt;Trademark Registration &lt;span style=&quot;margin-left:2px;&quot;&gt;Process&lt;\/span&gt;&lt;\/a&gt;&lt;\/li&gt;\r\n\t&lt;li className=&quot;listmenuli list_menu_li_7&quot;&gt;&lt;a className=&quot;anchortag&quot; href=&quot;#section8&quot;&gt;Documents Required&lt;\/a&gt;&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd--&gt;\r\n\r\n&lt;div className=&quot;service_inner_body col-md-6 col-12&quot;&gt;\r\n&lt;div className=&quot;listbodyscroll scrolllist_1 service_body&quot; id=&quot;section1&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;margin-top:17px;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;What is Trademark?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;A trademark can be a phrase, logo, design, and combination of colours or shapes etc, and that denotes the uniqueness of a brand or the product and differentiate from competitors. It is globally acknowledged trademark is the most valuable asset of a business. With a unique Trademark, customers can easily identify your products or services among various competitors&amp;rsquo; products.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_2 service_body&quot; id=&quot;section2&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;How to Apply Trademark Registration Online?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Trademarks can be applied with the assistance of our highly experienced professionals while you sit back and relax.&lt;\/p&gt;\r\n\r\n&lt;p&gt;You not just get a trademark registration online services but our experts continuously track your trademark application and update you time to time, can facilitate a detailed feasibility report on your trademark before applying by carrying thorough public trademark search and can also help you design a unique business logo.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_3 service_body&quot; id=&quot;section3&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Key Points of Register trademark in India&lt;\/h2&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Definition:- &lt;\/b&gt;A trademark can be a logo, design, shape, combination of colors, combination of different shapes, goods, etc and its uniqueness differently shown in its design.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Trademark Classes:- &lt;\/b&gt;Under Trademark, there are 45 classes defined based on business activity and register trademark in india in multiple classes as per the requirement of the business organization.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Valuable Assets:- &lt;\/b&gt;Like Company&amp;rsquo;s other tangible assets, a trademark is very worthwhile for a company to protect its goods, services from infringement.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Low cost of registration:- &lt;\/b&gt; In comparison to its driven benefits, cost of trademark registration online is very low.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Legal Brand Protection:- &lt;\/b&gt;Register trademark in India under trademark law, protect the brand from infringement and misuse from the third party.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;# Geographical Coverage:- &lt;\/b&gt;Trademark registration online provides you nation-wide protection from your competitors.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_4 service_body&quot; id=&quot;section4&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Why should I Register my Business Trademark?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;It is universally accepted that Unique Brand logo is the most valuable asset of any business since customers can swiftly recognize your product or services among competitor&amp;rsquo;s products serving in a similar domain. It is become very important to protect your brand logo from misuse or duplication by others. It is only possible by applying a trademark of your unique brand logo. So it is worth full to trademark your brand logo before anybody claims the ownership of your brand &amp;amp; enjoy any undue advantage.&lt;\/p&gt;\r\n&amp;nbsp;\r\n\r\n&lt;div className=&quot;row&quot; style=&quot;border:1px solid #ccc; margin-top: 30px;&quot;&gt;\r\n&lt;h6 style=&quot;text-align: center;font-weight: 900 !important;position: relative;margin-bottom:10px;margin-top:20px;font-size: 20px;&quot;&gt;DOWNLOAD FREE GUIDE FOR TRADEMARK&lt;\/h6&gt;\r\n\r\n&lt;div className=&quot;col-md-12&quot;&gt;\r\n&lt;form action=&quot;&quot; className=&quot;text-center&quot; method=&quot;post&quot; name=&quot;frmDownloadFreeGuide&quot; novalidate=&quot;novalidate&quot;&gt;\r\n&lt;div className=&quot;subscribe-gst&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;email_address&quot; placeholder=&quot;Enter Your Email Address&quot; required=&quot;&quot; type=&quot;email&quot; \/&gt;&lt;button id=&quot;DownloadFreeGuide&quot; name=&quot;DownloadFreeGuide&quot; type=&quot;submit&quot; value=&quot;41&quot;&gt;Send&lt;\/button&gt;&lt;\/div&gt;\r\n&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_5 service_body&quot; id=&quot;section5&quot;&gt;\r\n&lt;div className=&quot;description_data&quot; style=&quot;&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Difference between &amp;trade; &amp;amp; &amp;reg; symbol?&lt;\/h2&gt;\r\n\r\n&lt;div className=&quot;iconcontainer&quot;&gt;\r\n&lt;div className=&quot;row&quot;&gt;\r\n&lt;div className=&quot;col-md-6 col-sm-6&quot;&gt;\r\n&lt;div className=&quot;iconbox&quot; style=&quot;margin-top: 76px; border: 1px solid #ccc;padding-top: 16px;background: #f4f0f0;&quot;&gt;\r\n&lt;div className=&quot;iconbox-icon&quot;&gt;&lt;img alt=&quot;icon&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/Tm.webp&quot; style=&quot;width: 70px;&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;featureinfo&quot; style=&quot;text-align: left;margin-left: 10px;margin-right: 10px;&quot;&gt;\r\n&lt;p&gt;The &amp;trade; symbol used by the business entity once it successfully files the Trademark application.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-sm-6&quot;&gt;\r\n&lt;div className=&quot;iconbox&quot; style=&quot;margin-top: 76px; border: 1px solid #ccc;padding-top: 16px;     background: #f4f0f0;&quot;&gt;\r\n&lt;div className=&quot;iconbox-icon&quot;&gt;&lt;img alt=&quot;icon&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/R.webp&quot; style=&quot;width: 70px;&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;featureinfo&quot; style=&quot;text-align: left;margin-left: 10px;margin-right: 10px;&quot;&gt;\r\n&lt;p&gt;The &amp;reg; symbol can be used only upon obtaining Trademark Registration Certificate.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_6 service_body&quot; id=&quot;section6&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;description_data&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;What is the difference between trademark, copyright and patent?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;A &lt;b&gt;trademark&lt;\/b&gt; is a word, logo, design, and combination of colours &amp;amp; shapes etc. that denotes the originality of a brand and also differentiate it from its competitors.&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\n&lt;a className=&quot;treadmark_tag&quot; href=&quot;https:\/\/www.e-startupindia.com\/copyright.html&quot; target=&quot;_blank&quot;&gt;Copyright&lt;\/a&gt; is an intellectual property that provides rights to a creator over his original literary and artistic works.&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\nA &lt;b&gt;&lt;a className=&quot;treadmark_tag&quot; href=&quot;https:\/\/www.e-startupindia.com\/patent.html&quot; target=&quot;_blank&quot;&gt;patent&lt;\/a&gt;&lt;\/b&gt; provides the patent owner the right to commercialise the invention.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div applicationprocesssection=&quot;&quot; className=&quot;applicationProcessSection description_data id=&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;What is trademark class?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Trademark classes divided into 45 parts. It describes in broad terms the nature of the goods or services contained in each of the 34 classes of goods and 11 classes of services. So anybody can navigate intuitively through the classes and apply trademark registration online based on their business activity.&lt;br data-keep-empty=&quot;true&quot; \/&gt;\r\n&amp;trade; classes is recognised as the international standard classification for Goods and Services. &lt;a className=&quot;treadmark_tag&quot; href=&quot;https:\/\/e-startupindia.com\/trademark-class.html&quot; target=&quot;_blank&quot;&gt;Find out the full list of 45 Classes.&lt;\/a&gt;&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;How can I do a trademark search online?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;You can easily search your trademark availability before spending money on register trademark in india&lt;\/p&gt;\r\n\r\n&lt;p&gt;1. Visit &lt;a className=&quot;treadmark_tag&quot; href=&quot;https:\/\/ipindiaonline.gov.in\/tmrpublicsearch\/frmmain.aspx&quot; target=&quot;_blank&quot;&gt; Government trademark search portal Government trademark search portal. &lt;\/a&gt;&lt;\/p&gt;\r\n\r\n&lt;p&gt;2. Enter Trademark Class the words you want to search.&lt;\/p&gt;\r\n\r\n&lt;p&gt;3. Press Search.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;div className=&quot;card cardstyle&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;servicemorecartform&quot;&gt;\r\n&lt;h2 className=&quot;advisorsstyle&quot;&gt;Talk to Advisors&lt;\/h2&gt;\r\n\r\n&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;frmHeaderSection1&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;2&quot; \/&gt;\r\n&lt;div className=&quot;row&quot; style=&quot;margin:auto;&quot;&gt;\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px;&quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;50&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-6 col-12&quot;&gt;&lt;img alt=&quot;captcha&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=2&quot; style=&quot;    width: 84px;\r\n    height: 34px!important;\r\n    float: left;\r\n    max-width: 90px;\r\n    margin-left: 2px;\r\n    border-radius: 5px;\r\n    height: auto;\r\n    margin-top: 5px;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;width:60%;margin-left:101px;&quot; type=&quot;tel&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-12 col-12&quot; style=&quot;padding-top: 13px; padding-bottom: 23px;&quot;&gt;\r\n&lt;center&gt;&lt;button className=&quot;btn-form1&quot; id=&quot;header_contactform1&quot; name=&quot;HeaderContactForm&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/center&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Can I register my same trademark for different kinds of business?&lt;\/h2&gt;\r\n\r\n&lt;p&gt;There are 45 different classes based on the type of business activity under which you can register a trademark in India. You can apply trademark registration online under multiple classes at the same time based upon the nature of your business activity.&lt;\/p&gt;\r\n\r\n&lt;div className=&quot;row row1&quot;&gt;\r\n&lt;div className=&quot;col-md-5 opcnew&quot;&gt;\r\n&lt;div className=&quot;card cardicici&quot;&gt;\r\n&lt;div className=&quot;card-body&quot; style=&quot;padding: 1.8rem 2rem;&quot;&gt;&lt;img alt=&quot;Confused about selecting a unique catchy name for business&quot; className=&quot;img-fluid icici_connect_bank_logo&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/template\/img\/professionaldesign.svg&quot; style=&quot;width: 35%;&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;p style=&quot;padding-top:5px;font-size: 18px;font-weight: 400;color: #777;&quot;&gt;&lt;b style=&quot;color: #000;&quot;&gt;Confused about selecting a unique catchy name for business?&lt;\/b&gt;&lt;\/p&gt;\r\n\r\n&lt;p style=&quot;padding-top:5px;font-size: 18px;font-weight: 400;color: #777;&quot;&gt;Our professional can help you suggest a brand name for your dream startup.&lt;\/p&gt;\r\n\r\n&lt;div style=&quot;margin-bottom:20px;&quot;&gt;&lt;a className=&quot;signupbutton&quot; href=&quot;https:\/\/www.e-startupindia.com\/business-name-suggestion.html&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Know more&lt;\/b&gt;&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-5 opcnew1&quot;&gt;\r\n&lt;div className=&quot;card cardicici&quot;&gt;\r\n&lt;div className=&quot;card-body&quot; style=&quot;padding: 1.8rem 2rem;&quot;&gt;&lt;img alt=&quot;Get design brand logo&quot; className=&quot;img-fluid icici_connect_bank_logo&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/template\/img\/trademarkdesign.svg&quot; style=&quot;width: 35%;&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;p color:=&quot;&quot; style=&quot;padding-top:0px;font-size: 18px;font-weight: 600;color: #000;&amp;gt;&amp;lt;b style=&quot;&gt;# Get design brand logo&lt;\/p&gt;\r\n\r\n&lt;p style=&quot;padding-top:0px;font-size: 18px;font-weight: 400;color: #777;&quot;&gt;Hire our 10+ years experienced logo designer who helped 5000+ startups design attractive brand logos.&lt;\/p&gt;\r\n\r\n&lt;div style=&quot;margin-bottom:20px;&quot;&gt;&lt;a className=&quot;signupbutton&quot; href=&quot;https:\/\/www.e-startupindia.com\/logo-designing.html&quot; target=&quot;_blank&quot;&gt;&lt;b&gt;Know more&lt;\/b&gt;&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Trademark Registration online Process&lt;\/h2&gt;\r\n\r\n&lt;ul className=&quot;timeline&quot;&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;1&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot;color: #000000; padding-top:0px;&quot;&gt;Upload the required documents &amp;amp; information to our web portal.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;2&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot; color: #000000;padding-top:0px;&quot;&gt;Choose Package and Pay online with different payments modes available.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;3&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot; color: #000000; padding-top:0px;&quot;&gt;We will preliminary check the uniqueness of trademark design, logo, shape.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;4&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot; color: #000000; padding-top:0px;&quot;&gt;Prepare trademark application &amp;amp; obtain applicant signature on relevant documents.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;5&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot; color: #000000; padding-top:0px;&quot;&gt;Submit trademark registration online application before the IPR department.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n\t&lt;li className=&quot;timeline-item&quot;&gt;\r\n\t&lt;div className=&quot;timeline-icon&quot;&gt;6&lt;\/div&gt;\r\n\r\n\t&lt;p style=&quot;color: #000000; padding-top:0px;&quot;&gt;Provide acknowledgment &amp;amp; do continuous status tracking of the trademark.&lt;\/p&gt;\r\n\t&lt;\/li&gt;\r\n&lt;\/ul&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;listbodyscroll scrolllist_7 service_body&quot; id=&quot;section7a&quot;&gt;\r\n&lt;div className=&quot;applicationProcessSection description_data&quot; id=&quot;applicationProcessSection&quot;&gt;\r\n&lt;h2 className=&quot;title_div&quot;&gt;Documents required for Trademark Registration online&lt;\/h2&gt;\r\n\r\n&lt;div style=&quot;&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/trademark-doc.webp&quot; style=&quot;width:100%&quot; \/&gt;&lt;\/div&gt;\r\n&amp;nbsp;\r\n\r\n&lt;p&gt;&lt;b&gt;1. Brand Logo:-&lt;\/b&gt; A Logo required in jpeg or png format which you want to protect through register trademark in India.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;2. Nature of Business:-&lt;\/b&gt;You have to provide a brief description of business activity you&amp;rsquo;re carrying out under the brand logo which you want to protect with trademark registration online application. It is required to identify the correct class of trademark.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;3. Identity Proof of applicant:-&lt;\/b&gt; Anyone Identity proof document of trademark applicant required such as Aadhar, passport, driving license.&lt;\/p&gt;\r\n\r\n&lt;p&gt;&lt;b&gt;4. Address Of Applicant:-&lt;\/b&gt; Complete Address of the applicant of the Trademark is required to be furnished for Trademark Application.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--2nd end--&gt;&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;moredetails_form&quot; style=&quot;&quot;&gt;\r\n&lt;div className=&quot;form_s&quot;&gt;\r\n&lt;div className=&quot;form&quot; id=&quot;servicemorecartform&quot;&gt;\r\n&lt;h3 style=&quot;&quot;&gt;CONTACT US&lt;\/h3&gt;\r\n\r\n&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;frmHeaderSection2&quot; novalidate=&quot;novalidate&quot;&gt;&lt;input data-keep-empty=&quot;true&quot; name=&quot;position&quot; type=&quot;hidden&quot; value=&quot;3&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_name&quot; placeholder=&quot;Name&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_email_address&quot; placeholder=&quot;Email Id&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; name=&quot;client_mobile_number&quot; placeholder=&quot;Contact Number&quot; style=&quot;margin-bottom: 10px; &quot; type=&quot;text&quot; \/&gt; &lt;img alt=&quot;captcha&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/pluscaptcha.php?pos=3&quot; style=&quot;float:left;max-width:90px;    margin-top: 7px;&quot; \/&gt; &lt;input className=&quot;form-control&quot; data-keep-empty=&quot;true&quot; maxlength=&quot;2&quot; name=&quot;client_captche&quot; placeholder=&quot;Enter Answer&quot; style=&quot;width:120px;float:right;&quot; type=&quot;tel&quot; \/&gt;\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;whats_noti&quot;&gt;\r\n&lt;p className=&quot;what_in&quot; style=&quot;&quot;&gt;&lt;input checked=&quot;checked&quot; data-keep-empty=&quot;true&quot; type=&quot;checkbox&quot; \/&gt; Send updates on Whatsapp&lt;\/p&gt;\r\n&lt;span className=&quot;what_noti&quot;&gt;I agree to &lt;a href=&quot;terms-and-conditions.html&quot; target=&quot;_blank&quot;&gt;terms&lt;\/a&gt; and &lt;a href=&quot;privacy-policy.html&quot; target=&quot;_blank&quot;&gt;privacy policy&lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\r\n&lt;button className=&quot;btn-form&quot; id=&quot;header_contactform2&quot; name=&quot;HeaderContactForm&quot; style=&quot;width: 100%;&quot; value=&quot;Header Contact&quot;&gt;Submit&lt;\/button&gt;&lt;\/form&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--3rd form start--&gt;\r\n\r\n&lt;div className=&quot;info&quot;&gt;\r\n&lt;div className=&quot;container_a&quot;&gt;\r\n&lt;div className=&quot;row&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;clear&quot;&gt;&amp;nbsp;&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;row rwo_1&quot;&gt;\r\n&lt;h1&gt;DIFFERENT TYPES OF TRADEMARKS THAT CAN BE REGISTERED IN INDIA&lt;\/h1&gt;\r\n\r\n&lt;div className=&quot;col-md-2 trade_type_new word&quot;&gt;\r\n&lt;div className=&quot;card-trade &quot;&gt;\r\n&lt;div className=&quot;box&quot;&gt;\r\n&lt;div className=&quot;img&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/word.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;h2&gt;WORD MARKS&lt;\/h2&gt;\r\n\r\n&lt;p&gt;A word mark is made up of one or few words, or combination of words, e.g. QRS, XYZ or ABC Sales.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-2 trade_type_new&quot;&gt;\r\n&lt;div className=&quot;card-trade&quot;&gt;\r\n&lt;div className=&quot;box&quot;&gt;\r\n&lt;div className=&quot;img&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/logot.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;h2&gt;LOGOS&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Logos can be consist of a figure or a shape containing a word, colours, e.g. Nissan&amp;rsquo;s logo.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-2 trade_type_new color&quot;&gt;\r\n&lt;div className=&quot;card-trade &quot;&gt;\r\n&lt;div className=&quot;box&quot;&gt;\r\n&lt;div className=&quot;img&quot; style=&quot;margin-top:30px;&quot;&gt;&lt;img alt=&quot;COLORS&quot; className=&quot;ls-is-cached lazyloaded&quot; data-keep-empty=&quot;true&quot; data-lazyload-replaced=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/color.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;h2&gt;COLORS&lt;\/h2&gt;\r\n\r\n&lt;p&gt;You can apply for adding a specific colour on your trademark. For this, you must mention the particular colour in the TM application.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-2 trade_type_new&quot;&gt;\r\n&lt;div className=&quot;card-trade&quot;&gt;\r\n&lt;div className=&quot;box&quot;&gt;\r\n&lt;div className=&quot;img&quot; style=&quot;margin-top: -10px;&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/3Dmark.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;h2&gt;3D MARK&lt;\/h2&gt;\r\n\r\n&lt;p&gt;A Mark constituting 3 dimensional can protect with a 3D trademark.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n\r\n&lt;div className=&quot;col-md-2 trade_type_new sound&quot;&gt;\r\n&lt;div className=&quot;card-trade&quot;&gt;\r\n&lt;div className=&quot;box&quot;&gt;\r\n&lt;div className=&quot;img&quot; style=&quot;margin-top:50px;&quot;&gt;&lt;img data-keep-empty=&quot;true&quot; src=&quot;https:\/\/www.e-startupindia.com\/theme\/default\/images\/sound.webp&quot; \/&gt;&lt;\/div&gt;\r\n\r\n&lt;h2&gt;SOUND MARKS&lt;\/h2&gt;\r\n\r\n&lt;p&gt;Sound marks are used when brand is to be represented in a straight notation or through graphically represented words.&lt;\/p&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;!--package start--&gt;","image_path":null,"status":"1","slug":"check-new","meta_title":"Apply for trademark registration online | Register Trademark in India","heading_title":"&lt;h1&gt;Trademark Registration Online in India. Don&amp;rsquo;t let others copy your unique business name.&lt;\/h1&gt;\r\n\r\n&lt;p&gt;Protect your Brand, Logo &amp;amp; Unique business name from duplicacy by register trademark in india. Have a unique identity for your business. E-Startup India can help you in Register trademark in India within a day.&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fUser-Friendly Portal&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fTransparent Pricing&lt;\/p&gt;\r\n\r\n&lt;p&gt;\u2714 \ufe0fExcellent Customer Support&lt;\/p&gt;","heading_description":"","meta_keyword":"Trademark registration, trademark application, TM symbol, Trademark registration online","meta_description":"Get Trademark registration online. Easily upload logo, brand name, pay online and get the trademark registration process done quickly. Our professionals can help you register a trademark in India for your brand &amp; logo.","category":"22","page_id":"41","service_id":"10","style":".whats_noti {\r\n    margin: 13px 0px 1px;\r\n}\r\n.box h2 {\r\n    font-size: 23px;\r\n    margin: 8% 0%;\r\n    color: #000;\r\n}\r\n\r\n.row.rwo_1 h1:after {\r\n    content: '';\r\n    position: absolute;\r\n    right: 120px;\r\n    height: 5px;\r\n    background: #fcc813;\r\n    left: 19%;\r\n    bottom: -17px;\r\n    width: 62%;\r\n}\r\n\r\n.row.rwo_1 h1 {\r\n    text-align: center;\r\n    font-weight: 700 !important;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n    font-size: 28px;\r\n    margin-bottom: 5%;\r\n    margin-top: 4%;\r\n}\r\n.col-md-2.trade_type_new {\r\n    width: 20%;\r\n}\r\n.card-trade .box {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translateY(-50%);\r\n    text-align: center;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n}\r\n.card-trade .box p {\r\n    color: #262626;\r\n    font-size: 15px;\r\n}\r\n.card-trade .box .img {\r\n    width: 120px;\r\n    height: 120px;\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n}\r\n.card-trade {\r\n    min-height: 400px;\r\n    background: #fff;\r\n    box-shadow: 0 20px 50px rgba(0,0,0,.1);\r\n    border-radius: 10px;\r\n    transition: .5s;\r\n    text-align: center;\r\n    -webkit-transform-style: preserve-3d;\r\n    -moz-transform-style: preserve-3d;\r\n    -ms-transform-style: preserve-3d;\r\n    -o-transform-style: preserve-3d;\r\n    transform-style: preserve-3d;\r\n}\r\n.row.rwo_1 {\r\n    width: 94%;\r\n    margin: auto;\r\n    text-align: center;\r\n}\r\n.iconbox-icon img {\r\n    width: 70px;\r\n    height: 70px;\r\n    margin-top: 15px;\r\n}\r\n.iconbox-icon {\r\n    background-color: #fcc813;\r\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.1), 0 2px 10px 0 rgba(0,0,0,.12);\r\n    border-radius: 50%;\r\n    -webkit-border-radius: 50%;\r\n    -moz-border-radius: 50%;\r\n    margin: 0 auto;\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-top: -70px;\r\n    text-align: center;\r\n}\r\n.doc_i img{width:100%}\r\ndiv#servicemorecartform {\r\n    margin: 0;\r\n}\r\na.color {       font-weight: 600;\r\n    color: #007bff;\r\n    text-decoration: none;\r\n}\r\n.right input {\r\n    width: 100%;\r\n    padding: 10px 2%!important;\r\n    border-radius: 5px;\r\n    border: 1px solid #dee2e5;\r\n}\r\ninput[type=&quot;checkbox&quot;] {\r\n    filter: sepia(100%) brightness(80%) hue-rotate(170deg) saturate(70%) contrast(300%);\r\n}\r\nspan.what_noti a {\r\n    color: #f0a500;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n.what_in{          display: flex;\r\n    align-items: center;\r\n    margin: 0!important;\r\n    color: #f0a500!important;\r\n    font-weight: 500;}\r\n.what_in input{       width: 15px!important;\r\n    height: 16px;\r\n    margin-right: 2%;\r\n    margin-top: 0!important;}\r\n.what_noti{    font-size: 14px;\r\n    color: #777;\r\n    margin-bottom: 2%;\r\n    display: inline-block;}\r\n\r\n        .card-back.flip {\r\n    -webkit-transform: rotatey(0deg);\r\n    -moz-transform: rotatey(0deg);\r\n    -ms-transform: rotatey(0deg);\r\n    -o-transform: rotatey(0deg);\r\n    transform: rotatey(0deg);\r\n    opacity: 1;\r\n}\r\nform.tab-2 {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    display: none;\r\n    padding: 15px;\r\n}\r\n.gob {\r\n    color: #fff;\r\n    cursor: pointer;\r\n    top: 11px;\r\n    left: 11px;\r\n    position: relative;\r\n    z-index: 4;\r\n}\r\n.ui-form-01-wraper {\r\n    background: #272b37;\r\n    background-size: 100% 100%;\r\n    padding: 10px 15px;\r\n    text-align: center;\r\n    color: #fff;\r\n    box-shadow: 0px 0px 18px rgba(0, 0, 0, .5);\r\n}\r\n        a.btn.btn-form2 {\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 8px;\r\n    font-size: 13px;\r\n    position: relative;\r\n    background: linear-gradient(85deg, #fd9c19, #ffae00);\r\n    margin-left: 4%;\r\n    box-shadow: 12px 12px 24px 0 rgb(0 0 0 \/ 7%), -12px -12px 24px 0 rgba(255, 255, 255, 0.5);\r\n    width: 94%;\r\n    margin-bottom: 4%;\r\n}\r\n        .title_div1 {\r\n       font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n    line-height: normal;\r\n    margin-bottom: 6px;\r\n    margin-top: 4%;\r\n}\r\n.service-description {\r\n       overflow: hidden;\r\n    margin-top: 5%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    overflow: visible;\r\n}\r\n.card-body img {\r\n    width: 134px;\r\n}\r\na.signupbutton {\r\n    color: #000;\r\n}\r\n.card.cardicici p {\r\n    font-size: 16px;\r\n}\r\n.card-body img {\r\n    margin-bottom: 3%;\r\n}\r\n.cardstyle {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;}\r\n.timeline .timeline-item {\r\n    margin: 2rem 2rem 2rem 1rem!important;\r\n    list-style: none;\r\n}\r\n.table&gt;tbody&gt;tr&gt;td, .table&gt;tbody&gt;tr&gt;th, .table&gt;tfoot&gt;tr&gt;td, .table&gt;tfoot&gt;tr&gt;th, .table&gt;thead&gt;tr&gt;td, .table&gt;thead&gt;tr&gt;th {\r\n    padding: 8px;\r\n    line-height: 1.42857143;\r\n    vertical-align: top;font-size: 14px;\r\n    border-top: 1px solid #ddd;\r\n}\r\n.pacakage-price {\r\n    margin-top: 8%;\r\n    margin-bottom: 3%;\r\n}\r\nthead.thead-light tr th {\r\n    background: transparent;\r\n}\r\nthead.thead-light tr td {\r\n    background: transparent;\r\n}\r\n.form-control {\r\n    display: block;\r\n    width: 100%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n}\r\n.btn-form1 {\r\n    position: relative;\r\n    padding: 10px 35px;\r\n    font-size: 16px;\r\n    text-transform: uppercase;\r\n    color: #000;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background: #fcc813;\r\n    transition: .3s;\r\n    margin-bottom: 15px;\r\n    width: 50%;\r\n}\r\n.advisorsstyle {\r\n    text-align: center;\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    color: #000;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n}\r\n.timeline {\r\n    position: relative;\r\n}\r\n.timeline:before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 16px;\r\n    height: 100%;\r\n    z-index: 2;\r\n    top: 0;\r\n    bottom: 0;\r\n    border-left: 3px dashed #e3e6f0;\r\n}\r\n.timeline .timeline-item .timeline-icon {\r\n    background-color: #fcc813;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    left: 0;\r\n    width: 34px;\r\n    height: 34px;\r\n    z-index: 3;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n}\r\na#process {\r\n        color: #007bff!important;\r\n    margin-left: 0px;\r\n}\r\na#process {\r\n    display: inline;\r\n}\r\n.card.cardicici {\r\n        transition: all .3s ease;\r\n    border: 1px solid #ececec;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    margin-bottom: 20px;\r\n    box-shadow: 0 0 35px 0 rgb(154 161 171\/15%);\r\n    padding: 8% 8%;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n}\r\n.subscribe-gst input {\r\n    width: 60%;\r\n    border: 1px solid #ccc;\r\n    padding: 2%;\r\n    font-size: 15px;\r\n    margin-right: 2%;\r\n}\r\n.subscribe-gst {\r\n    margin: 3% 0%;\r\n}\r\nbutton#DownloadFreeGuide {\r\n    display: inline;\r\n    height: 48px;\r\n    width: 28%;\r\n    background: #fcc813;\r\n    border: 1px solid #fcc813;\r\n    color: #222;\r\n    text-transform: uppercase;\r\n}\r\nh2.title_div {\r\n    color: #f0a500;\r\n    font-weight: 600;\r\n    font-size: 27px;\r\n    margin-bottom: 3%;\r\n}\r\n.description_data p {\r\n    text-align: left;\r\n    margin: 0 0 10px;\r\n    color: #000;\r\n    font-family: helvetica neue,Helvetica,Arial,sans-serif;\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n    margin-top: 0!important;\r\n}\r\nli.listmenuli {\r\n    font-size: 16px;\r\n    padding: 0px 19px;\r\n    display: block;\r\n    font-weight: 700;\r\n    color: #000;\r\n    text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n}\r\n.navigation_list {\r\n     width: 25%;\r\n    float: left;\r\n    position: sticky;\r\n    top: 0;\r\n}\r\nli.listmenuli a{color:#000}\r\n.anchortag{       text-decoration: none;\r\n    transition: .2s ease-in-out;\r\n    font-size: 16px;\r\n    padding: 19px 10px;\r\n    display: block;\r\n    font-weight: 700;\r\n}\r\n.listmenuli:hover {\r\n    border-left: 5px solid #ffd000;\r\n    -webkit-box-shadow: 0 0 7px 0 #a39393;\r\n    box-shadow: 4px 13px 51px 7px rgb(10 51 80 \/ 16%);\r\n    background: #fff;\r\n}\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.multiselect-tags {\r\n    flex-wrap: nowrap;}\r\n\r\n\r\n.left p {\r\n    font-size: 19px;\r\n    color: #000;\r\n}\r\n.multiselect-wrapper {\r\n    color: #333;\r\n    font-size: 14px;\r\n    overflow: hidden;\r\n}\r\n.inner {\r\n    width: 95%;\r\n    margin: auto;\r\n}\r\n\r\ninput.submi_f {\r\n    margin-top: 5%;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.in_put button {\r\n    background: #f0a500;\r\n    width: 100%;\r\n    padding: 8px 1% 8px;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    border-radius: 1px;\r\n    transition: 1s;\r\n    color: #fff;position: relative;\r\n    border: 0px;z-index: 9;\r\n}\r\n.in_put {\r\n    margin-top: 3%;\r\n}\r\n\r\n.right .form {\r\n    background: #fff;\r\n    padding: 9% 10%;\r\n    border-radius: 5px;\r\n}\r\n\r\n.right h2 {\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-size: 25px;\r\n}\r\n.text-color {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n}\r\n\r\n.form-control {\r\n    border: 1px solid #e7ebee;\r\n    padding: 10px;\r\n    width: 100%;\r\n    border-radius: 7px;\r\n    margin-top: 5px;\r\n}\r\n\r\n\r\n.box p {\r\n    font-size: 15px !important;\r\n}\r\n\r\n.box img {\r\n    width: 100%;\r\n    margin-bottom: 10%;\r\n}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n    padding-left: 1%;\r\n}\r\n.multiselect-tag {\r\n    align-items: center;\r\n    background: #f1c40c;\r\n    border-radius: var(--ms-tag-radius,4px);\r\n    color: var(--ms-tag-color,#fff);\r\n    display: flex;\r\n    font-size: 12px;\r\n    font-weight: var(--ms-tag-font-weight,600);\r\n    line-height: var(--ms-tag-line-height,1.25rem);\r\n    margin-bottom: var(--ms-tag-my,.25rem);\r\n    margin-right: var(--ms-tag-mx,.25rem);\r\n    padding: 8px 1px;\r\n    white-space: nowrap;\r\n}\r\n.multiselect-tag-remove-icon {\r\n    background-color: currentColor;\r\n    display: inline-block;\r\n    height: 12px;}\r\n.multiselect {\r\n    border: 1px solid #e7ebee;\r\n    height: 47px;\r\n}\r\n.multiselect-option {\r\n    font-size: 14px;\r\n}\r\n::placeholder { \/* Chrome, Firefox, Opera, Safari 10.1+ *\/\r\n    color: #333!important;\r\n    opacity: 1; \/* Firefox *\/\r\n  }\r\n  .multiselect-wrapper{    color: #333;\r\n    font-size: 14px;}\r\n.box {\r\n    width: 21%;\r\n    float: left;\r\n    margin: 4%;\r\n    text-align: center;\r\n    margin-left: 0;\r\n\r\n}\r\n.pacakage-price * small i {\r\n    font-size: 11px;\r\n    color: #000;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;cursor: pointer;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n\r\n.input-icon {\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 input {\r\n    width: 100%;\r\n    height: 35px;\r\n    padding: 10px;\r\n    font-size: 13.5px;\r\n    font-weight: 600;\r\n    color: #222;\r\n    border-radius: 2px;\r\n    border: 1px solid #4c4c4c;\r\n    background: #fff;\r\n    overflow: hidden;\r\n}\r\n.ui-form-01 button {\r\n    width: 100%;\r\n    background: #fcc813;\r\n    border: 0;\r\n    color: #272b37;\r\n    text-transform: uppercase;\r\n    padding: 10px 14px;\r\n    margin: 15px auto;\r\n    border-bottom: 2px solid #4c4c4c;\r\n    transition: all 300ms linear;\r\n    border-radius: 3px;\r\n    display: block;\r\n    margin-bottom: 10px !important;\r\n}\r\n.ui-form-01-wraper p {\r\n    font-size: 18px;\r\n    font-weight: 100;\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n    color: #fcc813;\r\n}\r\n.clear{clear:both}\r\n.description_data p b {\r\n    font-weight: 600;\r\n    color: #000;\r\n}\r\n\r\n.cardstyle1 {\r\n    word-wrap: break-word;\r\n    background-color: #fff;\r\n    background-clip: border-box;\r\n    border: 1px solid rgba(0,0,0,.125);\r\n    border-radius: 0.25rem;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n}","tab_title":"Apply for trademark registration online | Register Trademark in India","faq":"","sub_category":"0"}}","status":200,"tags":["/[service]/page"],"url":"https://sankalpitsolutions.com/ecms/api/service_info.php?slug=check-new"},"revalidate":31536000}